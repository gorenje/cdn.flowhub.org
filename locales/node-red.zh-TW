{
    "batch": {
        "batch": "batch",
        "concat": {
            "topic": "\u4e3b\u984c",
            "topics-label": "\u4e3b\u984c"
        },
        "count": {
            "count": "\u6578\u91cf",
            "invalid": "\u7121\u6548\u7684\u5206\u7d44\u6578\u91cf\u6216\u91cd\u758a\u6578\u91cf",
            "label": "\u5206\u7d44\u6578\u91cf",
            "overlap": "\u968a\u672b\u968a\u9996\u91cd\u758a\u6578\u91cf"
        },
        "error": {
            "invalid-count": "Invalid count",
            "invalid-interval": "Invalid interval",
            "invalid-overlap": "Invalid overlap"
        },
        "interval": {
            "empty": "\u7121\u6578\u64da\u5230\u9054\u6642\u767c\u9001\u7a7a\u8cc7\u8a0a",
            "label": "\u6642\u9593\u9593\u9694",
            "seconds": "\u79d2"
        },
        "mode": {
            "concat": "\u6309\u4e3b\u984c\u5206\u7d44",
            "interval": "\u6309\u6642\u9593\u9593\u9694\u5206\u7d44",
            "label": "\u6a21\u5f0f",
            "num-msgs": "\u6309\u6307\u5b9a\u6578\u91cf\u5206\u7d44"
        },
        "no-parts": "\u8cc7\u8a0a\u4e2d\u6c92\u6709parts\u5c6c\u6027",
        "too-many": "batch\u7bc0\u9ede\u4e2d\u6709\u592a\u591a\u5f85\u5b9a\u4fe1\u606f",
        "unexpected": "\u672a\u77e5\u6a21\u5f0f"
    },
    "catch": {
        "catch": "\u76e3\u6e2c\u6240\u6709\u7bc0\u9ede",
        "catchGroup": "catch: group",
        "catchNodes": "\u76e3\u6e2c __number__ \u500b\u7bc0\u9ede",
        "catchUncaught": "\u6355\u7372\uff1a\u672a\u6355\u7372",
        "label": {
            "selectAll": "\u5168\u9078",
            "source": "\u76e3\u6e2c\u7bc4\u570d",
            "uncaught": "\u5ffd\u7565\u5176\u4ed6\u6355\u7372\u7bc0\u9ede\u8655\u7406\u7684\u932f\u8aa4"
        },
        "scope": {
            "all": "\u6240\u6709\u7bc0\u9ede",
            "group": "in same group",
            "selected": "\u6307\u5b9a\u7bc0\u9ede"
        }
    },
    "change": {
        "action": {
            "change": "\u4fee\u6539",
            "delete": "\u522a\u9664",
            "move": "\u8f49\u79fb",
            "replace": "\u66ff\u4ee3\u70ba",
            "search": "\u641c\u7d22",
            "set": "\u8a2d\u5b9a",
            "to": "\u5230",
            "toValue": "to the value"
        },
        "errors": {
            "invalid-expr": "\u7121\u6548\u7684JSONata\u904b\u7b97\u5f0f: __error__",
            "invalid-from": "\u7121\u6548\u7684'from'\u5c6c\u6027: __error__",
            "invalid-json": "\u7121\u6548\u7684'to'JSON \u5c6c\u6027",
            "invalid-json-data": "Invalid JSON data: __error__",
            "invalid-prop": "Invalid property expression: __property__",
            "no-override": "\u7121\u6cd5\u8a2d\u7f6e\u975e\u5c0d\u8c61\u985e\u578b\u7684\u5c6c\u6027\uff1a __property__"
        },
        "label": {
            "change": "\u4fee\u6539 __property__",
            "changeCount": "\u4fee\u6539: __count__ \u689d\u898f\u77e9",
            "deepCopy": "Deep copy value",
            "delete": "\u522a\u9664 __property__",
            "move": "\u79fb\u52d5 __property__",
            "regex": "\u4f7f\u7528\u898f\u5247\u904b\u7b97\u5f0f",
            "rule": "\u898f\u5247",
            "rules": "\u898f\u5247",
            "set": "\u8a2d\u5b9a __property__"
        }
    },
    "comment": {
        "comment": "\u6ce8\u91cb"
    },
    "common": {
        "errors": {
            "nooverride": "\u8b66\u544a: \u8cc7\u8a0a\u7684\u5c6c\u6027\u5df2\u7d93\u4e0d\u53ef\u4ee5\u6539\u5beb\u7bc0\u9ede\u7684\u5c6c\u6027. \u8a73\u60c5\u53c3\u8003 bit.ly/nr-override-msg-props"
        },
        "label": {
            "expand": "\u64f4\u5c55",
            "name": "\u540d\u7a31",
            "password": "\u5bc6\u78bc",
            "payload": "\u5167\u5bb9",
            "property": "\u5c6c\u6027",
            "selectNodes": "\u9078\u64c7\u7bc0\u9ede...",
            "topic": "\u4e3b\u984c",
            "username": "\u4f7f\u7528\u8005\u540d\u7a31"
        },
        "notification": {
            "error": "<strong>\u932f\u8aa4</strong>: __message__",
            "errors": {
                "no-response": "\u4f3a\u670d\u5668\u7121\u53cd\u61c9",
                "not-deployed": "\u7bc0\u9ede\u672a\u90e8\u7f72",
                "unexpected": "\u767c\u751f\u610f\u5916\u932f\u8aa4 (__status__) __message__"
            }
        },
        "status": {
            "connected": "\u5df2\u9023\u63a5",
            "connecting": "\u9023\u63a5\u4e2d",
            "disconnected": "\u5df2\u65b7\u958b",
            "error": "\u932f\u8aa4",
            "not-connected": "\u672a\u9023\u63a5",
            "ok": "\u78ba\u5b9a"
        }
    },
    "complete": {
        "completeNodes": "\u5b8c\u6210: __number__ \u500b\u7bc0\u9ede",
        "errors": {
            "scopeUndefined": "scope undefined"
        }
    },
    "csv": {
        "errors": {
            "bad_csv": "CSV\u6578\u64da\u683c\u5f0f\u932f\u8aa4-\u8f38\u51fa\u53ef\u80fd\u5df2\u640d\u58de\u3002",
            "bad_template": "Malformed columns template.",
            "csv_js": "\u6b64\u7bc0\u9ede\u50c5\u8655\u7406CSV\u5b57\u4e32\u6216JS\u7269\u4ef6",
            "obj_csv": "\u5c0d\u8c61->CSV\u8f49\u63db\u672a\u8a2d\u5b9a\u5217\u6a21\u7248"
        },
        "hdrout": {
            "all": "\u7e3d\u662f\u767c\u9001\u5217\u6a19\u984c",
            "none": "\u5f9e\u4e0d\u767c\u9001\u5217\u6a19\u984c",
            "once": "\u767c\u9001\u982d\u4e00\u6b21\uff0c\u76f4\u5230 msg.reset"
        },
        "label": {
            "c2o": "CSV\u81f3\u5c0d\u8c61",
            "columns": "\u5217",
            "firstrow": "\u7b2c\u4e00\u884c\u5305\u542b\u5217\u540d",
            "include_empty_strings": "\u5305\u542b\u7a7a\u5b57\u7b26\u4e32",
            "include_null_values": "\u5305\u542b\u7a7a\u503c",
            "includerow": "\u5305\u542b\u5217\u540d\u884c",
            "input": "\u8f38\u5165",
            "newline": "\u5206\u884c\u7b26\u865f",
            "o2c": "\u5c0d\u8c61\u81f3CSV",
            "output": "\u8f38\u51fa",
            "separator": "\u5206\u9694\u7b26\u865f",
            "skip-e": "\u884c",
            "skip-s": "\u5ffd\u7565\u524d",
            "spec": "Parser",
            "usestrings": "\u89e3\u6790\u6578\u503c"
        },
        "newline": {
            "linux": "Linux (\\n)",
            "mac": "Mac (\\r)",
            "windows": "Windows (\\r\\n)"
        },
        "output": {
            "array": "\u50c5\u4e00\u689d\u8cc7\u8a0a [\u9663\u5217]",
            "row": "\u6bcf\u884c\u4e00\u689d\u4fe1\u606f"
        },
        "placeholder": {
            "columns": "\u7528\u9017\u865f\u5206\u5272\u5217\u540d"
        },
        "separator": {
            "colon": "\u5192\u865f",
            "comma": "\u9017\u865f",
            "hashtag": "\u4e95\u865f",
            "other": "\u5176\u4ed6...",
            "semicolon": "\u5206\u865f",
            "space": "\u7a7a\u683c",
            "tab": "Tab"
        },
        "spec": {
            "legacy": "Legacy",
            "legacy_warning": "Legacy mode will be removed in a future release.",
            "rfc": "RFC4180"
        }
    },
    "debug": {
        "autostatus": "\u81ea\u52d5\u7684",
        "debtab": "\u9664\u932f\u7a97\u53e3",
        "invalid-exp": "\u7121\u6548\u7684JSONata\u8868\u9054\u5f0f: __error__",
        "messageCount": "message count",
        "messageMenu": {
            "clearFilter": "\u6e05\u7a7a\u904e\u6ffe\u689d\u4ef6",
            "clearPinned": "\u6e05\u7a7a\u5df2\u56fa\u5b9a\u8def\u5f91",
            "collapseAll": "\u6298\u758a\u6240\u6709\u8def\u5f91",
            "filterNode": "\u904e\u6ffe\u6b64\u7bc0\u9ede"
        },
        "msgobj": "\u8207\u8abf\u8a66\u8f38\u51fa\u76f8\u540c",
        "msgprop": "\u8cc7\u8a0a\u5c6c\u6027",
        "node": "node",
        "none": "None",
        "notification": {
            "activated": "\u6210\u529f\u555f\u52d5: __label__",
            "deactivated": "\u6210\u529f\u53d6\u6d88: __label__"
        },
        "output": "\u8f38\u51fa",
        "severity": "\u7d1a\u5225",
        "sidebar": {
            "all": "all",
            "clearFilteredLog": "Clear filtered messages",
            "clearLog": "\u6e05\u7a7a\u65e5\u8a8c",
            "copyPath": "\u5fa9\u5236\u8def\u5f91",
            "copyPayload": "\u5fa9\u5236\u503c",
            "debugNodes": "\u9664\u932f\u7bc0\u9ede",
            "filterAll": "\u6240\u6709\u7bc0\u9ede",
            "filterCurrent": "\u7576\u524d\u6d41\u7a0b",
            "filterLog": "\u904e\u6ffe\u65e5\u8a8c",
            "filterSelected": "\u5df2\u9078\u7bc0\u9ede",
            "filtered": "filtered",
            "label": "\u9664\u932f\u7a97\u53e3",
            "name": "\u540d\u7a31",
            "openWindow": "\u5728\u65b0\u8996\u7a97\u6253\u958b",
            "pinPath": "\u56fa\u5b9a\u5c55\u958b",
            "selectAll": "select all",
            "selectNone": "select none"
        },
        "status": "\u72c0\u614b",
        "tabcon": "\u9664\u932f\u7a97\u53e3\u53caConsole",
        "to": "\u76ee\u6a19",
        "toConsole": "Console",
        "toSidebar": "\u9664\u932f\u7a97\u53e3",
        "toStatus": "\u7bc0\u9ede\u72c0\u614b (32\u4f4d\u5143\u5b57\u5143)"
    },
    "delay": {
        "action": "\u884c\u70ba\u8a2d\u7f6e",
        "allowrate": "allow msg.rate (in ms) to override rate",
        "and": "\u81f3",
        "between": "\u4ecb\u65bc",
        "day": "\u5929",
        "days": "\u5929",
        "delayfixed": "\u56fa\u5b9a\u5ef6\u9072\u6642\u9593",
        "delaymsg": "\u5ef6\u9072\u6bcf\u4e00\u689d\u8cc7\u8a0a",
        "delayvarmsg": "\u5141\u8a31msg.delay\u8907\u5beb\u5ef6\u9072\u6642\u9577",
        "dropmsg": "\u4e0d\u50b3\u8f38\u4e2d\u9593\u8cc7\u8a0a",
        "error": {
            "buffer": "\u7de9\u885d\u4e86\u8d85\u904e 1000 \u689d\u8cc7\u8a0a",
            "buffer1": "\u7de9\u885d\u4e86\u8d85\u904e 10000 \u689d\u8cc7\u8a0a"
        },
        "errors": {
            "invalid-random-first": "Invalid first random value",
            "invalid-random-last": "Invalid last random value",
            "invalid-rate": "Invalid rate value",
            "invalid-rate-unit": "Invalid rate unit value",
            "invalid-timeout": "Invalid delay value",
            "too-many": "too many pending messages in delay node"
        },
        "fairqueue": "\u4f9d\u6b21\u767c\u9001\u6bcf\u4e00\u500btopic",
        "for": "\u6642\u9577",
        "hour": "\u5c0f\u6642",
        "hours": "\u5c0f\u6642",
        "label": {
            "delay": "\u5ef6\u9072",
            "limit": "\u9650\u5236",
            "limitTopic": "\u9650\u5236\u4e3b\u984c",
            "random": "\u96a8\u6a5f",
            "random-first": "first random value",
            "random-last": "last random value",
            "rate": "rate",
            "units": {
                "day": {
                    "plural": "\u5929",
                    "singular": "\u5929"
                },
                "hour": {
                    "plural": "\u5c0f\u6642",
                    "singular": "\u5c0f\u6642"
                },
                "minute": {
                    "plural": "\u5206\u9418",
                    "singular": "\u5206\u9418"
                },
                "second": {
                    "plural": "\u79d2",
                    "singular": "\u79d2"
                }
            },
            "variable": "\u8b8a\u6578"
        },
        "limitall": "\u6240\u6709\u8cc7\u8a0a",
        "limitrate": "\u9650\u5236\u8cc7\u8a0a\u983b\u7387",
        "limittopic": "\u6bcf\u4e00\u500bmsg.topic",
        "milisecs": "\u6beb\u79d2",
        "min": "\u5206",
        "mins": "\u5206",
        "msgper": "\u4fe1\u606f \u6bcf",
        "queuemsg": "Queue intermediate messages",
        "randomdelay": "\u96a8\u6a5f\u5ef6\u9072",
        "rate": "\u901f\u5ea6",
        "sec": "\u79d2",
        "secs": "\u79d2",
        "sendmsg": "Send intermediate messages on 2nd output",
        "timedqueue": "\u767c\u6240\u6709topic"
    },
    "exec": {
        "exec": "exec",
        "label": {
            "append": "\u8ffd\u52a0",
            "command": "\u547d\u4ee4",
            "retcode": "\u8fd4\u56de\u78bc",
            "return": "\u8f38\u51fa",
            "seconds": "\u79d2",
            "stderr": "\u6a19\u6e96\u932f\u8aa4\u8f38\u51fa",
            "stdout": "\u6a19\u6e96\u8f38\u51fa",
            "timeout": "\u8d85\u6642",
            "timeoutplace": "\u53ef\u9078\u586b",
            "winHide": "Hide console"
        },
        "oldrc": "\u4f7f\u7528\u820a\u5f0f\u8f38\u51fa (\u76f8\u5bb9\u6a21\u5f0f)",
        "opt": {
            "exec": "\u7576\u547d\u4ee4\u5b8c\u6210\u6642 - exec\u6a21\u5f0f",
            "spawn": "\u7576\u547d\u4ee4\u9032\u884c\u6642 - spawn\u6a21\u5f0f"
        },
        "placeholder": {
            "extraparams": "\u984d\u5916\u7684\u8f38\u5165\u53c3\u6578"
        },
        "spawn": "spawn"
    },
    "file": {
        "action": {
            "append": "\u8ffd\u52a0\u81f3\u6587\u4ef6",
            "delete": "\u522a\u9664\u6a94",
            "overwrite": "\u8907\u5beb\u6587\u4ef6"
        },
        "encoding": {
            "chinese": "\u4e2d\u570b",
            "ibm": "IBM\u4ee3\u78bc\u9801",
            "iso": "ISO\u4ee3\u78bc\u9801",
            "japanese": "\u65e5\u672c",
            "koi8": "KOI8\u4ee3\u78bc\u9801",
            "korean": "\u97d3\u570b",
            "mac": "Mac\u4ee3\u78bc\u9801",
            "misc": "\u5176\u5b83",
            "native": "Native",
            "none": "\u9ed8\u8a8d",
            "setbymsg": "set by msg.encoding",
            "taiwan": "\u81fa\u7063/\u9999\u6e2f",
            "unicode": "Unicode",
            "windows": "Windows\u4ee3\u78bc\u9801"
        },
        "errors": {
            "appendfail": "\u7121\u6cd5\u8ffd\u52a0\u5230\u6587\u4ef6: __error__",
            "createfail": "\u6a94\u5275\u5efa\u5931\u6557: __error__",
            "deletefail": "\u7121\u6cd5\u522a\u9664\u6a94: __error__",
            "invaliddelete": "\u8b66\u544a\uff1a\u7121\u6548\u522a\u9664\u3002\u8acb\u5728\u914d\u7f6e\u5c0d\u8a71\u65b9\u584a\u4e2d\u4f7f\u7528\u7279\u5b9a\u7684\u522a\u9664\u9078\u9805",
            "nofilename": "\u672a\u6307\u5b9a\u6a94\u6848\u540d",
            "writefail": "\u7121\u6cd5\u5beb\u5165\u6587\u4ef6: __error__"
        },
        "label": {
            "action": "\u884c\u70ba",
            "addnewline": "\u5411\u6bcf\u500b\u6709\u6548\u8f09\u8377\u6dfb\u52a0\u5206\u884c\u7b26\u865f\uff08\\n\uff09?",
            "allProps": "include all existing properties in each msg",
            "binaryBuffer": "\u4e8c\u9032\u5236buffer",
            "binaryBuffer_plural": "binary buffers",
            "breakchunks": "\u5206\u62c6\u6210\u584a",
            "breaklines": "\u5206\u62c6\u6210\u884c",
            "createdir": "\u5275\u5efa\u76ee\u9304\uff08\u5982\u679c\u4e0d\u5b58\u5728\uff09?",
            "deletelabel": "\u522a\u9664 __file__",
            "encoding": "\u7de8\u78bc",
            "filename": "\u6a94\u6848\u540d",
            "outputas": "\u8f38\u51fa",
            "path": "path",
            "read": "read file",
            "sendError": "\u767c\u751f\u932f\u8aa4\u6642\u767c\u9001\u6d88\u606f\uff08\u50b3\u7d71\u6a21\u5f0f\uff09",
            "utf8String": "UTF8\u5b57\u7b26\u4e32",
            "utf8String_plural": "UTF8 strings",
            "write": "write file"
        },
        "output": {
            "buffer": "\u4e00\u500bBuffer\u7269\u4ef6",
            "lines": "\u6bcf\u884c\u4e00\u689d\u4fe1\u606f",
            "stream": "\u4e00\u500bBuffer\u6d41",
            "utf8": "\u4e00\u500butf8\u5b57\u4e32"
        },
        "status": {
            "appendedfile": "\u8ffd\u52a0\u81f3\u6587\u4ef6: __file__",
            "deletedfile": "\u522a\u9664\u6a94: __file__",
            "wrotefile": "\u5beb\u5165\u81f3\u6587\u4ef6: __file__"
        },
        "tip": "\u63d0\u793a: \u6a94\u6848\u540d\u61c9\u8a72\u662f\u7d55\u5c0d\u8def\u5f91\uff0c\u5426\u5247\u5b83\u5c07\u76f8\u5c0d\u65bcNode-RED\u9032\u7a0b\u7684\u5de5\u4f5c\u76ee\u9304\u3002"
    },
    "function": {
        "error": {
            "externalModuleLoadError": "Function node failed to load external modules",
            "externalModuleNotAllowed": "Function node not allowed to load external modules",
            "inputListener": "\u7121\u6cd5\u5728\u51fd\u6578\u4e2d\u76e3\u807d\u5c0d'\u6ce8\u5165'\u4e8b\u4ef6",
            "invalid-js": "Error in JavaScript code",
            "missing-module": "Module __module__ missing",
            "moduleLoadError": "Failed to load module __module__: __error__",
            "moduleNameError": "Invalid module variable name: __name__",
            "moduleNameReserved": "Reserved variable name: __name__",
            "moduleNotAllowed": "Module __module__ not allowed",
            "non-message-returned": "\u51fd\u6578\u7bc0\u9ede\u5617\u8a66\u8fd4\u56de\u985e\u578b\u70ba __type__ \u7684\u8cc7\u8a0a"
        },
        "function": "\u51fd\u6578",
        "label": {
            "finalize": "\u95dc\u9589",
            "function": "\u51fd\u6578",
            "initialize": "\u8a2d\u7f6e",
            "modules": "Modules",
            "outputs": "\u8f38\u51fa",
            "setup": "Setup",
            "timeout": "Timeout"
        },
        "require": {
            "importAs": "Import as",
            "module": "module",
            "moduleName": "Module name",
            "var": "variable"
        },
        "text": {
            "finalize": "// \u7bc0\u9ede\u6b63\u5728\u505c\u6b62\u6216\u91cd\u65b0\u90e8\u7f72\u6642\uff0c\u5c07\u904b\u884c\u6b64\u8655\u6dfb\u52a0\u7684\u4ee3\u78bc\u3002 \n",
            "initialize": "// \u90e8\u7f72\u7bc0\u9ede\u5f8c\uff0c\u6b64\u8655\u6dfb\u52a0\u7684\u4ee3\u78bc\u5c07\u904b\u884c\u4e00\u6b21\u3002 \n"
        }
    },
    "global-config": {
        "label": {
            "open-conf": "Open Configuration"
        }
    },
    "html": {
        "format": {
            "multi": "\u591a\u689d\u8cc7\u8a0a\uff0c\u6bcf\u689d\u4e00\u500b\u5143\u7d20",
            "single": "\u4e00\u689d\u8cc7\u8a0a [\u9663\u5217]"
        },
        "label": {
            "in": "in",
            "output": "\u8f38\u51fa",
            "prefix": "Property name for HTML content",
            "select": "\u9078\u53d6\u9805"
        },
        "output": {
            "attr": "\u5305\u542b\u9078\u5b9a\u5143\u7d20\u7684\u6240\u6709\u5c6c\u6027\u7684\u7269\u4ef6",
            "compl": "an object of any attributes of the elements and html contents",
            "html": "\u9078\u5b9a\u5143\u7d20\u7684html\u5167\u5bb9",
            "text": "\u9078\u5b9a\u5143\u7d20\u7684\u7d14\u6587\u5b57\u5167\u5bb9"
        }
    },
    "httpin": {
        "basic": "\u57fa\u672c\u8a8d\u8b49",
        "basicauth": "\u57fa\u672c\u8a8d\u8b49",
        "bearer": "bearer\u8a8d\u8b49",
        "binary": "\u4e8c\u9032\u4f4d\u8cc7\u6599",
        "digest": "\u6458\u8981\u8a8d\u8b49",
        "errors": {
            "deprecated-call": "__method__ \u65b9\u6cd5\u5df2\u68c4\u7528",
            "invalid-payload": "\u7121\u6548\u7684\u6709\u6548\u8f09\u8377",
            "invalid-transport": "\u975eHTTP\u50b3\u8f38\u8acb\u6c42",
            "invalid-url": "Invalid url",
            "json-error": "JSON \u89e3\u6790\u932f\u8aa4",
            "missing-path": "\u7121\u8def\u5f91",
            "no-response": "\u7121\u97ff\u61c9\u7269\u4ef6",
            "no-url": "\u672a\u8a2d\u5b9a URL",
            "not-created": "\u7576httpNodeRoot\u70ba\u5426\u6642\uff0c\u7121\u6cd5\u5275\u5efahttp-in\u7bc0\u9ede",
            "timeout-isnan": "\u8d85\u6642\u503c\u4e0d\u662f\u6709\u6548\u6578\u5b57\uff0c\u5ffd\u7565",
            "timeout-isnegative": "\u8d85\u6642\u503c\u70ba\u8ca0\uff0c\u5ffd\u7565"
        },
        "httpreq": "http \u8acb\u6c42",
        "insecureHTTPParser": "Disable strict HTTP parsing",
        "json": "JSON\u5c0d\u8c61",
        "label": {
            "authType": "\u985e\u578b",
            "bearerToken": "Token",
            "binaryBuffer": "\u4e8c\u9032\u5236buffer",
            "doc": "\u6587\u5b57\u6a94",
            "headers": "Header",
            "jsonObject": "\u89e3\u6790\u7684JSON\u5c0d\u8c61",
            "method": "\u8acb\u6c42\u65b9\u5f0f",
            "other": "\u5176\u4ed6",
            "paytoqs": "\u5c07msg.payload\u9644\u52a0\u70ba\u67e5\u8a62\u5b57\u7b26\u4e32\u53c3\u6578",
            "return": "\u8fd4\u56de",
            "status": "\u72c0\u614b\u78bc",
            "upload": "\u63a5\u53d7\u6a94\u6848\u4e0a\u50b3?",
            "url": "URL",
            "utf8String": "UTF8\u683c\u5f0f\u7684\u5b57\u7b26\u4e32"
        },
        "noproxy-hosts": "\u4ee3\u7406\u4f8b\u5916",
        "persist": "\u5c0d\u9023\u63a5\u555f\u7528keep-alive",
        "proxy-config": "\u4ee3\u7406\u670d\u52d9\u5668\u8a2d\u7f6e",
        "senderr": "Only send non-2xx responses to Catch node",
        "setby": "- \u7528 msg.method \u8a2d\u5b9a -",
        "status": {
            "requesting": "\u8acb\u6c42\u4e2d"
        },
        "tip": {
            "in": "\u76f8\u5c0dURL",
            "req": "\u63d0\u793a\uff1a\u5982\u679cJSON\u89e3\u6790\u5931\u6557\uff0c\u5247\u7372\u53d6\u7684\u5b57\u4e32\u5c07\u6309\u539f\u6a23\u8fd4\u56de.",
            "res": "\u767c\u9001\u5230\u6b64\u7bc0\u9ede\u7684\u6d88\u606f<b>\u5fc5\u9808</b>\u4f86\u81ea<i>http input</i>\u7bc0\u9ede"
        },
        "tls-config": "TLS \u8a2d\u7f6e",
        "use-proxy": "\u4f7f\u7528\u4ee3\u7406\u670d\u52d9\u5668",
        "use-proxyauth": "\u4f7f\u7528\u4ee3\u7406\u8eab\u4efd\u9a57\u8b49",
        "use-tls": "\u4f7f\u7528\u5b89\u5168\u9023\u63a5 (SSL/TLS) ",
        "utf8": "UTF-8 \u5b57\u4e32"
    },
    "inject": {
        "and": "\u81f3",
        "at": "\u5728",
        "between": "\u4ecb\u65bc",
        "crontab": "crontab = __crontab__",
        "days": [
            "\u661f\u671f\u4e00",
            "\u661f\u671f\u4e8c",
            "\u661f\u671f\u4e09",
            "\u661f\u671f\u56db",
            "\u661f\u671f\u4e94",
            "\u661f\u671f\u516d",
            "\u661f\u671f\u5929"
        ],
        "errors": {
            "failed": "\u6ce8\u5165\u5931\u6557, \u8acb\u67e5\u770b\u65e5\u8a8c",
            "invalid-expr": "\u7121\u6548\u7684JSONata\u8868\u9054\u5f0f\uff1a __error__",
            "invalid-json": "__prop__: invalid JSON data: __error__",
            "invalid-jsonata": "__prop__: invalid property expression: __error__",
            "invalid-prop": "__prop__: invalid property expression: __error__",
            "invalid-repeat": "Invalid repeat value",
            "toolong": "\u9031\u671f\u904e\u9577"
        },
        "every": "\u6bcf\u9694",
        "failed": "\u6ce8\u5165\u5931\u6557: __error__",
        "hours": "\u5c0f\u6642",
        "inject": "\u6ce8\u5165",
        "injectNow": "inject now",
        "interval": "\u9031\u671f\u6027\u57f7\u884c",
        "interval-time": "\u6307\u5b9a\u6642\u9593\u6bb5\u4e26\u9031\u671f\u6027\u57f7\u884c",
        "label": {
            "Array": "\u6578\u7d44",
            "bin": "buffer",
            "bool": "\u5e03\u723e\u503c",
            "boolean": "\u5e03\u723e\u503c",
            "date": "\u6642\u9593\u6233",
            "env": "\u74b0\u5883\u8b8a\u91cf",
            "flow": "\u6d41\u4e0a\u4e0b\u5348",
            "global": "\u5168\u5c40\u4e0a\u4e0b\u6587",
            "invalid": "\u7121\u6548\u7684JSON\u5c0d\u8c61",
            "json": "JSON\u5c0d\u8c61",
            "num": "\u6578\u503c",
            "number": "\u6578\u503c",
            "object": "\u5c0d\u8c61",
            "properties": "\u5c6c\u6027",
            "repeat": "\u91cd\u8907",
            "str": "\u5b57\u7b26\u4e32",
            "string": "\u5b57\u7b26\u4e32"
        },
        "minutes": "\u5206\u9418",
        "none": "\u7121",
        "on": "\u5728",
        "onceDelay": "\u79d2\u5f8c, \u6b64\u5f8c",
        "onstart": "\u7acb\u523b\u57f7\u884c\u65bc",
        "previous": "\u4e4b\u524d\u6578\u503c",
        "repeat": "\u91cd\u8907 = __repeat__",
        "seconds": "\u79d2",
        "stopped": "\u505c\u6b62",
        "success": "\u6210\u529f\u6ce8\u5165: __label__",
        "time": "\u6307\u5b9a\u6642\u9593",
        "timestamp": "\u6642\u9593\u6233\u8a18",
        "tip": "<b>\u6ce8\u610f:</b> \"\u6307\u5b9a\u6642\u9593\u6bb5\u4e26\u9031\u671f\u6027\u57f7\u884c\" \u548c \"\u6307\u5b9a\u6642\u9593\" \u6703\u4f7f\u7528cron\u7cfb\u7d71.<br/> \u8a73\u60c5\u67e5\u770b\u4fe1\u606f\u9801."
    },
    "join": {
        "afterCount": "\u9054\u5230\u4e00\u5b9a\u6578\u91cf\u7684\u8cc7\u8a0a\u6642",
        "afterTimeout": "\u7b2c\u4e00\u689d\u6d88\u606f\u7684\u82e5\u5e79\u6642\u9593\u5f8c",
        "combine": "\u5408\u4f75\u6bcf\u500b",
        "complete": "\u5728\u6536\u5230\u5b58\u5728<code>msg.complete</code>\u7684\u6d88\u606f\u5f8c",
        "completeMessage": "\u5b8c\u6574\u7684\u6d88\u606f",
        "count": "\u6578\u91cf",
        "create": "\u8f38\u51fa\u70ba",
        "errors": {
            "invalid-expr": "\u7121\u6548\u7684JSONata\u904b\u7b97\u5f0f: __error__",
            "invalid-type": "\u7121\u6cd5\u6dfb\u52a0 __error__ \u81f3buffer"
        },
        "join": "join",
        "joinedUsing": "\u5408\u4f75\u7b26\u865f",
        "key": "\u4f5c\u70ba\u9375",
        "merge": {
            "on-change": "\u7576\u6536\u5230\u4e00\u500b\u65b0\u4e3b\u984c\u6642\u767c\u9001\u5df2\u5408\u4f75\u8cc7\u8a0a",
            "topic": "\u4e3b\u984c",
            "topics": "\u4e3b\u984c",
            "topics-label": "\u5408\u4f75\u4e3b\u984c"
        },
        "message-prop": "message property",
        "mode": {
            "auto": "\u81ea\u52d5",
            "custom": "\u624b\u52d5",
            "merge": "\u5408\u4f75\u5e8f\u5217",
            "mode": "\u6a21\u5f0f",
            "reduce": "\u7e2e\u6e1b\u5e8f\u5217"
        },
        "reduce": {
            "exp": "Reduce\u904b\u7b97\u5f0f",
            "exp-value": "exp",
            "fixup": "Fix-up exp",
            "init": "\u521d\u59cb\u503c",
            "right": "\u53cd\u5411\u6c42\u503c(\u5f9e\u5f8c\u5f80\u524d)"
        },
        "seconds": "\u79d2",
        "send": "\u767c\u9001\u8cc7\u8a0a:",
        "subsequent": "\u548c\u6bcf\u500b\u5f8c\u7e8c\u7684\u6d88\u606f",
        "tip": "\u6b64\u6a21\u5f0f\u5047\u5b9a\u6b64\u7bc0\u9ede\u8207<i>split</i>\u76f8\u9023, \u6216\u8005\u63a5\u6536\u5230\u7684\u6d88\u606f\u6709\u6b63\u78ba\u914d\u7f6e\u7684<code>msg.parts</code>\u5c6c\u6027.",
        "too-many": "join\u7bc0\u9ede\u4e2d\u6709\u592a\u591a\u5f85\u5b9a\u4fe1\u606f",
        "type": {
            "array": "\u9663\u5217",
            "buffer": "Buffer",
            "merged": "\u5408\u4f75\u5c0d\u8c61",
            "object": "\u9375\u503c\u5c0d\u5c0d\u8c61",
            "string": "\u5b57\u4e32"
        },
        "useparts": "Use existing msg.parts property",
        "using": "\u4f7f\u7528\u6b64\u503c"
    },
    "json": {
        "errors": {
            "dropped": "\u5ffd\u7565\u4e0d\u652f\u63f4\u683c\u5f0f\u7684\u6709\u6548\u8ca0\u8f09\u985e\u578b",
            "dropped-error": "\u8f49\u63db\u6709\u6548\u8ca0\u8f09\u5931\u6557",
            "dropped-object": "\u5ffd\u7565\u975e\u7269\u4ef6\u683c\u5f0f\u7684\u6709\u6548\u8ca0\u8f09",
            "schema-error": "JSON\u67b6\u69cb\u932f\u8aa4",
            "schema-error-compile": "JSON\u67b6\u69cb\u932f\u8aa4: \u672a\u80fd\u7de8\u8b6f\u67b6\u69cb"
        },
        "label": {
            "action": "\u64cd\u4f5c",
            "actions": {
                "obj": "\u7e3d\u662f\u8f49\u70baJS\u5c0d\u8c61",
                "str": "\u7e3d\u662f\u8f49\u70baJSON\u5b57\u4e32",
                "toggle": "JSON\u5b57\u4e32\u8207\u7269\u4ef6\u4e92\u8f49"
            },
            "o2j": "\u5c0d\u8c61\u81f3JSON",
            "pretty": "\u683c\u5f0f\u5316JSON\u5b57\u4e32",
            "property": "\u5c6c\u6027"
        }
    },
    "link": {
        "dynamicLinkCall": "Dynamic target (msg.target)",
        "dynamicLinkLabel": "Dynamic",
        "errors": {
            "linkUndefined": "link undefined",
            "missingReturn": "Missing return node information"
        },
        "linkCall": "link call",
        "linkCallType": "Link Type",
        "linkIn": "\u8f38\u5165",
        "linkOut": "\u8f38\u51fa",
        "linkOutReturn": "link return",
        "outMode": "Mode",
        "returnToCaller": "Return to calling link node",
        "sendToAll": "Send to all connected link nodes",
        "staticLinkCall": "Fixed target",
        "timeout": "timeout"
    },
    "mqtt": {
        "errors": {
            "invalid-action-action": "Invalid action specified",
            "invalid-action-alreadyconnected": "Disconnect from broker before connecting",
            "invalid-action-badsubscription": "msg.topic is missing or invalid",
            "invalid-client-id": "Missing Client ID",
            "invalid-json-parse": "\u7121\u6cd5\u89e3\u6790JSON\u5b57\u7b26\u4e32",
            "invalid-json-string": "\u7121\u6548\u7684JSON\u5b57\u7b26\u4e32",
            "invalid-topic": "\u4e3b\u984c\u7121\u6548",
            "missing-config": "\u672a\u8a2d\u7f6e\u670d\u52d9\u7aef",
            "nonclean-missingclientid": "\u4f7f\u7528\u8005\u7aefID\u672a\u8a2d\u5b9a\uff0c\u4f7f\u7528\u65b0\u6703\u8a71",
            "not-defined": "\u4e3b\u984c\u672a\u8a2d\u7f6e"
        },
        "false": "\u5426",
        "label": {
            "action": "Action",
            "auto-connect": "Connect automatically",
            "auto-mode-depreciated": "This option is depreciated. Please use the new auto-detect mode.",
            "autoUnsubscribe": "Automatically unsubscribe when disconnecting",
            "broker": "\u670d\u52d9\u7aef",
            "cleansession": "\u4f7f\u7528\u65b0\u7684\u6703\u8a71",
            "cleanstart": "Use clean start",
            "clientid": "\u4f7f\u7528\u8005\u7aefID",
            "compatmode": "\u4f7f\u7528\u820a\u5f0fMQTT 3.1\u652f\u63f4",
            "contentType": "Content Type",
            "correlationData": "Correlation Data",
            "delay": "Delay",
            "dynamicTopic": "Dynamic subscription",
            "example": "e.g. localhost",
            "expiry": "Expiry (secs)",
            "flags": "Flags",
            "keepalive": "Keepalive\u8a08\u6642(\u79d2)",
            "maximumPacketSize": "Max Packet Size",
            "nl": "Do not receive messages published by this client",
            "none": "none",
            "other": "other",
            "output": "\u8f38\u51fa",
            "payloadFormatIndicator": "Format",
            "payloadFormatIndicatorFalse": "unspecified bytes (Default)",
            "payloadFormatIndicatorTrue": "UTF-8 encoded payload",
            "port": "\u57e0",
            "protocolVersion": "Protocol",
            "protocolVersion3": "MQTT V3.1 (legacy)",
            "protocolVersion4": "MQTT V3.1.1",
            "protocolVersion5": "MQTT V5",
            "qos": "QoS",
            "rap": "Keep retain flag of original publish",
            "receiveMaximum": "Receive Max",
            "responseTopic": "Response topic",
            "retain": "\u4fdd\u6301",
            "rh": "Retained message handling ",
            "rh0": "Send retained messages",
            "rh1": "Only send for new subscriptions",
            "rh2": "Do not send",
            "session": "Session",
            "sessionExpiry": "Session Expiry (secs)",
            "staticTopic": "Subscribe to single topic",
            "subscriptionIdentifier": "Subscription ID",
            "tls-config": "TLS \u8a2d\u7f6e",
            "topicAlias": "Alias",
            "topicAliasMaximum": "Alias Max",
            "use-tls": "\u4f7f\u7528 TLS",
            "userProperties": "User Properties",
            "verify-server-cert": "\u9a57\u8b49\u4f3a\u670d\u5668\u6191\u8b49"
        },
        "output": {
            "auto": "\u81ea\u52d5\u6aa2\u6e2c (\u5b57\u7b26\u4e32\u6216buffer)",
            "auto-detect": "\u81ea\u52a8\u68c0\u6d4b (\u5df2\u89e3\u6790\u7684JSON\u5bf9\u8c61\u3001\u5b57\u7b26\u4e32\u6216buffer)",
            "base64": "Base64\u7de8\u78bc\u5b57\u4e32",
            "buffer": "Buffer",
            "json": "\u89e3\u6790\u7684JSON\u5c0d\u8c61",
            "string": "\u5b57\u4e32"
        },
        "placeholder": {
            "birth-topic": "\u7559\u767d\u5c07\u7981\u6b62Birth\u8cc7\u8a0a",
            "clientid": "\u7559\u767d\u5247\u81ea\u52d5\u96a8\u6a5f\u751f\u6210",
            "clientid-nonclean": "\u5982\u975e\u65b0\u6703\u8a71\uff0c\u5fc5\u9808\u8a2d\u7f6e\u4f7f\u7528\u8005\u7aefID",
            "close-topic": "\u7559\u767d\u4ee5\u7981\u7528\u95dc\u9589\u6d88\u606f",
            "will-topic": "\u7559\u767d\u5c07\u7981\u6b62Will\u8cc7\u8a0a"
        },
        "retain": "\u4fdd\u7559",
        "sections-label": {
            "birth-message": "\u9023\u63a5\u6642\u767c\u9001\u7684\u6d88\u606f\uff08\u51fa\u751f\u6d88\u606f\uff09",
            "close-message": "\u65b7\u958b\u9023\u63a5\u524d\u767c\u9001\u7684\u6d88\u606f\uff08\u95dc\u9589\u6d88\u606f\uff09",
            "will-message": "\u610f\u5916\u65b7\u958b\u9023\u63a5\u6642\u7684\u767c\u9001\u6d88\u606f\uff08Will\u6d88\u606f\uff09"
        },
        "state": {
            "broker-disconnected": "Broker __broker__ disconnected client: __reasonCode__ __reasonString__",
            "connect-failed": "\u8207\u670d\u52d9\u7aef __broker__ \u7684\u9023\u63a5\u5931\u6557",
            "connected": "\u5df2\u9023\u63a5\u5230\u670d\u52d9\u7aef: __broker__",
            "disconnected": "\u5df2\u65b7\u958b\u8207\u670d\u52d9\u7aef __broker__ \u7684\u9023\u7d50"
        },
        "tabs-label": {
            "connection": "\u9023\u63a5",
            "messages": "\u6d88\u606f",
            "security": "\u5b89\u5168"
        },
        "tip": "\u63d0\u793a: \u82e5\u5e0c\u671b\u901a\u904emsg\u5c6c\u6027\u5c0dtopic(\u8cc7\u8a0a), qos\u53caretain(\u4fdd\u7559)\u9032\u884c\u8a2d\u7f6e, \u5247\u5c07\u4e0a\u8ff0\u9805\u7559\u767d",
        "true": "\u662f"
    },
    "range": {
        "errors": {
            "notnumber": "\u4e0d\u662f\u4e00\u500b\u6578\u5b57"
        },
        "label": {
            "action": "\u64cd\u4f5c",
            "from": "\u5f9e",
            "inputrange": "\u6620\u5c04\u8f38\u5165\u8cc7\u6599",
            "maxin": "input to",
            "maxout": "target to",
            "minin": "input from",
            "minout": "target from",
            "resultrange": "\u81f3\u76ee\u6a19\u7bc4\u570d",
            "roundresult": "\u53d6\u6700\u63a5\u8fd1\u6574\u6578\uff1f",
            "to": "\u5230"
        },
        "placeholder": {
            "maxin": "e.g. 99",
            "maxout": "e.g. 255",
            "min": "e.g. 0"
        },
        "range": "range",
        "scale": {
            "drop": "Scale, but drop msg if outside input range",
            "limit": "\u6309\u6bd4\u4f8b\u4e26\u8a2d\u5b9a\u754c\u9650\u81f3\u76ee\u6a19\u7bc4\u570d",
            "payload": "\u6309\u6bd4\u4f8bmsg.payload",
            "wrap": "\u6309\u6bd4\u4f8b\u4e26\u5305\u542b\u5728\u76ee\u6a19\u7bc4\u570d\u5167"
        },
        "tip": "\u63d0\u793a: \u6b64\u7bc0\u9ede\u50c5\u5c0d\u6578\u5b57\u6709\u6548"
    },
    "rbe": {
        "label": {
            "func": "Mode",
            "gap": "value change",
            "init": "Send initial value",
            "name": "Name",
            "property": "property",
            "septopics": "Apply mode separately for each ",
            "start": "Start value",
            "topic": "topic"
        },
        "opts": {
            "deadband": "block unless value change is greater than",
            "deadbandEq": "block unless value change is greater or equal to",
            "in": "compared to last input value",
            "narrowband": "block if value change is greater than",
            "narrowbandEq": "block if value change is greater or equal to",
            "out": "compared to last valid output value",
            "rbe": "block unless value changes",
            "rbei": "block unless value changes (ignore initial value)"
        },
        "placeholder": {
            "bandgap": "e.g. 10 or 5%",
            "start": "leave blank to use first data received"
        },
        "rbe": "filter",
        "warn": {
            "nonumber": "no number found in payload"
        }
    },
    "sort": {
        "as-number": "\u4f5c\u70ba\u6578\u503c",
        "ascending": "\u6607\u51aa",
        "clear": "\u6e05\u7a7a\u6392\u5e8f\u7bc0\u9ede\u4e2d\u7684\u5f85\u5b9a\u8cc7\u8a0a",
        "descending": "\u964d\u51aa",
        "elem": "\u5143\u7d20\u503c",
        "invalid-exp": "\u6392\u5e8f\u7bc0\u9ede\u4e2d\u5b58\u5728\u7121\u6548\u7684JSONata\u904b\u7b97\u5f0f",
        "key": "\u9375\u503c",
        "order": "\u9806\u5e8f",
        "seq": "\u8cc7\u8a0a\u4f47\u5217",
        "sort": "\u6392\u5e8f",
        "target": "\u6392\u5e8f\u5c6c\u6027",
        "too-many": "\u6392\u5e8f\u7bc0\u9ede\u4e2d\u6709\u592a\u591a\u5f85\u5b9a\u4fe1\u606f"
    },
    "split": {
        "addname": " \u8907\u88fd\u9375\u5230 ",
        "array": "<b>\u9663\u5217</b>",
        "intro": "\u57fa\u65bc\u4ee5\u4e0b\u985e\u578b\u62c6\u5206<code>msg.payload</code>:",
        "object": "<b>\u5c0d\u8c61</b>",
        "objectSend": "\u6bcf\u500b\u9375\u503c\u5c0d\u4f5c\u70ba\u55ae\u500b\u6d88\u606f\u767c\u9001",
        "split": "split",
        "splitLength": "\u56fa\u5b9a\u9577\u5ea6",
        "splitUsing": "\u62c6\u5206\u4f7f\u7528",
        "strBuff": "<b>\u5b57\u4e32</b> / <b>Buffer</b>",
        "stream": "\u4f5c\u70ba\u6d88\u606f\u6d41\u8655\u7406"
    },
    "status": {
        "label": {
            "sortByType": "\u6309\u985e\u578b\u6392\u5e8f",
            "source": "\u5831\u544a\u72c0\u614b\u7bc4\u570d"
        },
        "scope": {
            "all": "\u6240\u6709\u7bc0\u9ede",
            "group": "in same group",
            "selected": "\u6307\u5b9a\u7bc0\u9ede"
        },
        "status": "\u5831\u544a\u6240\u6709\u7bc0\u9ede\u72c0\u614b",
        "statusGroup": "status: group",
        "statusNodes": "\u5831\u544a __number__ \u500b\u7bc0\u9ede\u72c0\u614b"
    },
    "switch": {
        "and": "\u8207",
        "checkall": "\u5168\u9078\u6240\u6709\u898f\u5247",
        "errors": {
            "invalid-expr": "\u7121\u6548\u7684JSONata\u904b\u7b97\u5f0f: __error__",
            "too-many": "Switch\u7bc0\u9ede\u4e2d\u6709\u592a\u591a\u5f85\u5b9a\u4fe1\u606f"
        },
        "ignorecase": "\u5ffd\u7565\u5927\u5c0f\u5beb",
        "label": {
            "property": "\u5c6c\u6027",
            "repair": "\u91cd\u5efa\u8cc7\u8a0a\u4f47\u5217",
            "rule": "\u898f\u5247",
            "sequence-rules": "sequence rules",
            "value-rules": "value rules"
        },
        "previous": "\u5148\u524d\u503c",
        "rules": {
            "btwn": "\u5728\u4e4b\u9593",
            "cont": "\u5305\u542b",
            "else": "\u9664\u6b64\u4ee5\u5916",
            "empty": "\u70ba\u7a7a",
            "exp": "JSONata\u904b\u7b97\u5f0f",
            "false": "\u70ba\u5047",
            "hask": "\u64c1\u6709\u9375",
            "head": "head",
            "index": "index between",
            "istype": "\u985e\u578b\u662f",
            "nempty": "\u975e\u7a7a",
            "nnull": "\u975e\u7a7a",
            "null": "\u70ba\u7a7a",
            "regex": "\u5339\u914d\u898f\u5247\u904b\u7b97\u5f0f",
            "tail": "tail",
            "true": "\u70ba\u771f"
        },
        "stopfirst": "\u63a5\u53d7\u7b2c\u4e00\u689d\u5339\u914d\u8cc7\u8a0a\u5f8c\u505c\u6b62",
        "switch": "switch"
    },
    "tcpin": {
        "errors": {
            "bad-string": "failed to convert to string",
            "cannot-listen": "\u7121\u6cd5\u76e3\u807d\u57e0 __port__, \u932f\u8aa4: __error__",
            "connect-fail": "\u9023\u63a5\u5931\u6557",
            "connect-timeout": "\u9023\u63a5\u903e\u6642",
            "connection-lost": "\u9023\u63a5\u4e2d\u65b7 __host__:__port__",
            "error": "\u932f\u8aa4: __error__",
            "invalid-host": "Invalid host",
            "invalid-port": "Invalid port",
            "no-host": "\u4e3b\u6a5f\u4f4d\u5740\u6216\u57e0\u672a\u8a2d\u5b9a",
            "socket-error": "\u901a\u8a0a\u7aef\u9023\u63a5\u932f\u8aa4\u4f86\u81ea __host__:__port__",
            "timeout": "\u8d85\u6642\u95dc\u9589\u901a\u8a0a\u7aef\u9023\u63a5\uff0c\u57e0 __port__"
        },
        "label": {
            "chars": "\u5b57\u5143",
            "close": "Close",
            "close-connection": "\u662f\u5426\u5728\u6210\u529f\u767c\u9001\u6bcf\u689d\u8cc7\u8a0a\u5f8c\u65b7\u958b\u9023\u63a5?",
            "decode-base64": "\u7528 Base64 \u89e3\u78bc\u4fe1\u606f?",
            "delimited": "\u5206\u9694\u7b26\u865f\u865f",
            "host": "\u4e3b\u6a5f\u4f4d\u5740",
            "ms": "\u6beb\u79d2",
            "optional": "(optional)",
            "output": "\u8f38\u51fa",
            "payload": "\u7684\u6709\u6548\u8f09\u8377",
            "port": "\u57e0",
            "reattach": "re-attach delimiter",
            "return": "\u8fd4\u56de",
            "server": "\u4f3a\u670d\u5668",
            "type": "\u985e\u578b"
        },
        "output": {
            "base64": "Base64 \u5b57\u4e32",
            "buffer": "Buffer",
            "single": "\u55ae\u4e00",
            "stream": "\u5b57\u4e32\u6d41",
            "string": "\u5b57\u4e32"
        },
        "return": {
            "character": "\u7576\u6536\u5230\u67d0\u500b\u5b57\u5143\u70ba",
            "immed": "\u99ac\u4e0a - \u4e0d\u9700\u8981\u7b49\u5f85\u56de\u5fa9",
            "never": "\u6c38\u4e0d - \u4fdd\u6301\u9023\u63a5",
            "number": "\u6307\u5b9a\u5b57\u5143\u6578",
            "timeout": "\u6307\u5b9a\u6642\u9593\u5f8c"
        },
        "status": {
            "connected": "\u5df2\u7d93\u9023\u63a5\u5230 __host__:__port__",
            "connecting": "\u6b63\u5728\u9023\u63a5\u5230 __host__:__port__",
            "connection-closed": "\u9023\u63a5\u5df2\u95dc\u9589 __host__:__port__",
            "connection-from": "\u9023\u63a5\u4f86\u81ea __host__:__port__",
            "connections": "__count__ \u500b\u9023\u63a5",
            "connections_plural": "__count__ \u500b\u9023\u63a5",
            "listening-port": "\u76e3\u807d\u57e0 __port__",
            "stopped-listening": "\u5df2\u505c\u6b62\u76e3\u807d\u57e0"
        },
        "type": {
            "connect": "\u9023\u63a5",
            "listen": "\u76e3\u807d",
            "reply": "\u56de\u61c9 TCP"
        }
    },
    "template": {
        "label": {
            "format": "\u8a9e\u6cd5\u9ad8\u4eae",
            "json": "JSON",
            "mustache": "Mustache \u6a21\u7248",
            "none": "\u7121",
            "output": "\u8f38\u51fa\u70ba",
            "plain": "\u7d14\u6587\u5b57",
            "property": "\u5c6c\u6027",
            "syntax": "\u683c\u5f0f",
            "template": "\u6a21\u7248",
            "yaml": "YAML"
        },
        "template": "\u6a21\u677f",
        "templatevalue": "This is the payload: {{payload}} !"
    },
    "tls": {
        "error": {
            "invalid-cert": "Certificate not specified",
            "invalid-key": "Private key not specified",
            "missing-file": "\u672a\u63d0\u4f9b\u8b49\u66f8/\u91d1\u9470\u6a94\u6848"
        },
        "label": {
            "alpnprotocol": "ALPN Protocol",
            "ca": "CA\u8b49\u66f8",
            "cert": "\u8b49\u66f8",
            "key": "\u79c1\u5bc6\u91d1\u9470",
            "passphrase": "\u5bc6\u78bc",
            "servername": "\u670d\u52d9\u5668\u540d",
            "upload": "\u4e0a\u50b3",
            "use-local-files": "\u4f7f\u7528\u672c\u5730\u5bc6\u9470\u53ca\u8b49\u66f8\u6a94",
            "verify-server-cert": "\u9a57\u8b49\u4f3a\u670d\u5668\u6191\u8b49"
        },
        "placeholder": {
            "alpnprotocol": "for use with ALPN",
            "ca": "CA\u6191\u8b49\u8def\u5f91 (PEM \u683c\u5f0f)",
            "cert": "\u6191\u8b49\u8def\u5f91 (PEM \u683c\u5f0f)",
            "key": "\u79c1\u5bc6\u91d1\u9470\u8def\u5f91 (PEM \u683c\u5f0f)",
            "passphrase": "\u79c1\u5bc6\u91d1\u9470\u5bc6\u78bc (\u53ef\u9078)",
            "servername": "\u7528\u65bcSNI"
        },
        "tls": "TLS\u8a2d\u7f6e"
    },
    "trigger": {
        "alltopics": "\u6240\u6709\u6d88\u606f",
        "bytopics": "\u6bcf\u500bmsg.topic",
        "duration": {
            "h": "\u5c0f\u6642",
            "m": "\u5206\u9418",
            "ms": "\u6beb\u79d2",
            "s": "\u79d2"
        },
        "extend": " \u5982\u6709\u65b0\u8cc7\u8a0a\uff0c\u5ef6\u9577\u5ef6\u9072",
        "for": "\u8655\u7406",
        "label": {
            "duration": "duration",
            "reset": "\u91cd\u7f6e\u89f8\u767c\u7bc0\u9ede\u689d\u4ef6 \u5982\u679c:",
            "resetMessage": "msg.reset\u5df2\u8a2d\u7f6e",
            "resetPayload": "msg.payload\u7b49\u65bc",
            "resetprompt": "\u53ef\u9078\u586b",
            "topic": "topic",
            "trigger": "\u89f8\u767c",
            "trigger-block": "\u89f8\u767c\u4e26\u963b\u6b62",
            "trigger-loop": "\u9031\u671f\u6027\u91cd\u767c"
        },
        "output": {
            "existing": "\u73fe\u6709\u8cc7\u8a0a\u7269\u4ef6",
            "latest": "\u6700\u65b0\u8cc7\u8a0a\u7269\u4ef6",
            "nothing": "\u7121",
            "number": "\u6578\u5b57",
            "original": "\u539f\u672c\u8cc7\u8a0a\u7269\u4ef6",
            "string": "\u5b57\u4e32"
        },
        "override": "\u4f7f\u7528msg.delay\u8986\u84cb\u5ef6\u9072\u6642\u9593",
        "second": " \u767c\u9001\u7b2c\u4e8c\u689d\u6d88\u606f\u5230\u55ae\u7368\u7684\u8f38\u51fa",
        "send": "\u767c\u9001",
        "then": "\u7136\u5f8c",
        "then-send": "\u7136\u5f8c\u767c\u9001",
        "wait-for": "\u7b49\u5f85",
        "wait-loop": "\u9031\u671f\u6027\u91cd\u767c",
        "wait-reset": "\u7b49\u5f85\u88ab\u91cd\u7f6e"
    },
    "udp": {
        "bcmsg": "\u5ee3\u64ad\u8cc7\u8a0a",
        "bind": {
            "local": "\u7d81\u5b9a\u5230\u672c\u5730\u57e0",
            "random": "\u7d81\u5b9a\u5230\u4efb\u610f\u672c\u5730\u57e0",
            "target": "\u7d81\u5b9a\u5230\u76ee\u6a19\u57e0"
        },
        "errors": {
            "access-error": "UDP \u8a2a\u554f\u932f\u8aa4, \u4f60\u53ef\u80fd\u9700\u8981root\u8a31\u53ef\u6b0a\u624d\u80fd\u63a5\u51651024\u4ee5\u4e0b\u7684\u57e0",
            "alreadyused": "udp: \u57e0\u5df2\u88ab\u4f54\u7528",
            "bad-mcaddress": "\u7121\u6548\u7684\u7fa4\u64ad\u5730\u5740",
            "error": "\u932f\u8aa4: __error__",
            "ifnotfound": "udp: \u63a5\u53e3 __iface__ \u672a\u767c\u73fe",
            "interface": "\u5fc5\u9808\u662f\u6307\u5b9a\u4ecb\u9762\u7684IP\u4f4d\u5740",
            "invalid-group": "invalid multicast group",
            "ip-notset": "udp: IP\u5730\u5740\u672a\u8a2d\u5b9a",
            "port-invalid": "udp: \u7121\u6548\u57e0\u865f\u78bc",
            "port-notset": "udp: \u57e0\u672a\u8a2d\u5b9a"
        },
        "label": {
            "address": "\u5730\u5740",
            "decode-base64": "\u662f\u5426\u89e3\u78bcBase64\u7de8\u78bc\u7684\u8cc7\u8a0a?",
            "group": "\u7d44",
            "interface": "\u672c\u5730IP",
            "interfaceprompt": "\uff08\u53ef\u9078\uff09\u672c\u5730 IP \u7d81\u5b9a\u5230",
            "listen": "\u76e3\u807d",
            "onport": "\u57e0",
            "output": "\u8f38\u51fa",
            "port": "port",
            "send": "\u767c\u9001\u4e00\u500b",
            "toport": "\u5230\u57e0",
            "using": "\u4f7f\u7528"
        },
        "mcmsg": "\u7fa4\u64ad\u4fe1\u606f",
        "mcmsgs": "\u7fa4\u64ad\u4fe1\u606f",
        "output": {
            "base64": "Base64\u7de8\u78bc\u5b57\u4e32",
            "buffer": "Buffer",
            "string": "\u5b57\u4e32"
        },
        "placeholder": {
            "address": "\u76ee\u6a19IP\u4f4d\u5740",
            "interface": "\uff08\u53ef\u9078\uff09eth0\u7684IP\u5730\u5740",
            "interfaceprompt": "(\u53ef\u9078) \u8981\u7d81\u5b9a\u7684\u672c\u5730\u63a5\u53e3\u6216\u5730\u5740"
        },
        "status": {
            "bc-ready": "udp \u5ee3\u64ad\u5df2\u6e96\u5099\u597d: __outport__ -> __host__:__port__",
            "listener-at": "udp \u76e3\u807d\u5668\u6b63\u5728\u76e3\u807d __host__:__port__",
            "listener-stopped": "udp \u76e3\u807d\u5668\u5df2\u505c\u6b62",
            "mc-group": "udp \u7fa4\u64ad\u5230 __group__",
            "mc-ready": "udp \u7fa4\u64ad\u5df2\u6e96\u5099\u597d: __outport__ -> __host__:__port__",
            "output-stopped": "udp \u8f38\u51fa\u5df2\u505c\u6b62",
            "re-use": "udp \u91cd\u7528\u901a\u8a0a\u7aef: __outport__ -> __host__:__port__",
            "ready": "udp \u5df2\u6e96\u5099\u597d: __outport__ -> __host__:__port__",
            "ready-nolocal": "udp \u5df2\u6e96\u5099\u597d: __host__:__port__"
        },
        "tip": {
            "in": "\u63d0\u793a\uff1a\u78ba\u4fdd\u60a8\u7684\u9632\u706b\u7246\u5c07\u5141\u8a31\u8cc7\u6599\u9032\u5165",
            "out": "\u63d0\u793a\uff1a\u5982\u679c\u8981\u4f7f\u7528<code>msg.ip</code>\u548c<code>msg.port</code>\u8a2d\u7f6e\uff0c\u8acb\u5c07\u4f4d\u5740\u548c\u57e0\u7559\u7a7a",
            "port": "\u6b63\u5728\u4f7f\u7528\u57e0: "
        },
        "udpmsg": "udp\u4fe1\u606f",
        "udpmsgs": "udp\u4fe1\u606f"
    },
    "unknown": {
        "label": {
            "unknown": "\u672a\u77e5"
        },
        "tip": "<p>\u6b64\u7bc0\u9ede\u662f\u60a8\u5b89\u88dd\uff0c\u4f46Node-RED\u6240\u4e0d\u77e5\u9053\u7684\u985e\u578b\u3002</p><p><i>\u5982\u679c\u5728\u6b64\u72c0\u614b\u4e0b\u90e8\u7f72\u7bc0\u9ede\uff0c\u90a3\u9ebc\u5b83\u7684\u914d\u7f6e\u5c07\u88ab\u4fdd\u7559\uff0c\u4f46\u662f\u6d41\u7a0b\u5c07\u4e0d\u6703\u555f\u52d5\uff0c\u76f4\u5230\u5b89\u88dd\u7f3a\u5c11\u7684\u7bc0\u9ede\u3002</i></p><p>\u6709\u95dc\u66f4\u591a\u8aac\u660e\uff0c\u8acb\u53c3\u95b1\u8cc7\u8a0a\u5074\u6b04</p>"
    },
    "watch": {
        "label": {
            "files": "\u6587\u4ef6",
            "recursive": "\u905e\u8ff4\u6240\u6709\u5b50\u8cc7\u6599\u593e"
        },
        "placeholder": {
            "files": "\u9017\u865f\u5206\u958b\u6587\u4ef6\u6216\u8cc7\u6599\u593e"
        },
        "tip": "\u5728Windows\u4e0a\uff0c\u8acb\u52d9\u5fc5\u4f7f\u7528\u96d9\u659c\u6760 \\\\ \u4f86\u9694\u958b\u8cc7\u6599\u593e\u540d\u5b57",
        "watch": "watch"
    },
    "websocket": {
        "connectto": "\u9023\u63a5",
        "errors": {
            "connect-error": "ws\u9023\u63a5\u767c\u751f\u4e86\u932f\u8aa4: ",
            "duplicate-path": "\u540c\u4e00\u8def\u5f91\u4e0a\u4e0d\u80fd\u6709\u5169\u500bWebSocket\u5075\u807d\u5668: __path__",
            "missing-client": "Missing client configuration",
            "missing-conf": "\u672a\u8a2d\u7f6e\u4f3a\u670d\u5668",
            "missing-server": "Missing server configuration",
            "send-error": "\u767c\u9001\u6642\u767c\u751f\u4e86\u932f\u8aa4: "
        },
        "label": {
            "path": "\u8def\u5f91",
            "subprotocol": "\u5b50\u534f\u8bae",
            "type": "\u985e\u578b",
            "url": "URL"
        },
        "listenon": "\u76e3\u807d",
        "message": "\u5b8c\u6574\u8cc7\u8a0a",
        "payload": "\u6709\u6548\u8f09\u8377",
        "sendheartbeat": "Send heartbeat",
        "sendrec": "\u767c\u9001/\u63a5\u53d7",
        "status": {
            "connected": "\u9023\u63a5\u6578 __count__",
            "connected_plural": "\u9023\u63a5\u6578 __count__"
        },
        "tip": {
            "headers": "\u6a19\u982d\u50c5\u5728\u5354\u5b9a\u5347\u7d1a\u6a5f\u5236\u671f\u9593\u63d0\u4ea4\uff0c\u5f9e HTTP \u5230 WS/WSS \u5354\u5b9a.",
            "path1": "\u9810\u8a2d\u60c5\u6cc1\u4e0b\uff0c<code>payload</code>\u5c07\u5305\u542b\u8981\u767c\u9001\u6216\u5f9eWebsocket\u63a5\u6536\u7684\u8cc7\u6599\u3002\u5075\u807d\u5668\u53ef\u4ee5\u914d\u7f6e\u70ba\u4ee5JSON\u683c\u5f0f\u7684\u5b57\u4e32\u767c\u9001\u6216\u63a5\u6536\u6574\u500b\u6d88\u606f\u7269\u4ef6.",
            "path2": "\u9019\u689d\u8def\u5f91\u5c07\u76f8\u5c0d\u65bc <code>__path__</code>.",
            "url1": "URL \u61c9\u8a72\u4f7f\u7528ws:&#47;&#47;\u6216\u8005wss:&#47;&#47;\u65b9\u6848\u4e26\u6307\u5411\u73fe\u6709\u7684websocket\u76e3\u807d\u5668.",
            "url2": "\u9810\u8a2d\u60c5\u6cc1\u4e0b\uff0c<code>payload</code> \u5c07\u5305\u542b\u8981\u767c\u9001\u6216\u5f9eWebsocket\u63a5\u6536\u7684\u8cc7\u6599\u3002\u53ef\u4ee5\u5c07\u4f7f\u7528\u8005\u7aef\u914d\u7f6e\u70ba\u4ee5JSON\u683c\u5f0f\u7684\u5b57\u4e32\u767c\u9001\u6216\u63a5\u6536\u6574\u500b\u6d88\u606f\u7269\u4ef6."
        }
    },
    "xml": {
        "errors": {
            "xml_js": "\u6b64\u7bc0\u9ede\u50c5\u8655\u7406XML\u5b57\u4e32\u6216JS\u7269\u4ef6."
        },
        "label": {
            "advanced": "\u9ad8\u7d1a\u9078\u9805",
            "prefix": "\u6a19\u7c64\u6587\u672c\u5167\u5bb9\u7684\u5c6c\u6027\u540d\u7a31",
            "represent": "XML\u6a19\u7c64\u5c6c\u6027\u7684\u5c6c\u6027\u540d\u7a31",
            "x2o": "XML\u5230\u7269\u4ef6\u9078\u9805"
        }
    },
    "yaml": {
        "errors": {
            "dropped": "\u5ffd\u7565\u4e0d\u652f\u63f4\u683c\u5f0f\u7684\u6709\u6548\u8ca0\u8f09\u985e\u578b",
            "dropped-error": "\u8f49\u63db\u6709\u6548\u8ca0\u8f09\u5931\u6557",
            "dropped-object": "\u5ffd\u7565\u975e\u7269\u4ef6\u683c\u5f0f\u7684\u6709\u6548\u8ca0\u8f09"
        }
    }
}
