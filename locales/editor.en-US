{
    "actions": {
        "search-counter": "\"__term__\" __result__ of __count__",
        "search-flows": "Search flows",
        "search-next": "Next",
        "search-prev": "Previous",
        "toggle-navigator": "Toggle navigator",
        "zoom-in": "Zoom in",
        "zoom-out": "Zoom out",
        "zoom-reset": "Reset zoom"
    },
    "bufferEditor": {
        "modeArray": "Handle as JSON array",
        "modeDesc": "<h3>Buffer editor</h3><p>The Buffer type is stored as a JSON array of byte values. The editor will attempt to parse the entered value as a JSON array. If it is not valid JSON, it will be treated as a UTF-8 String and converted to an array of the individual character code points.</p><p>For example, a value of <code>Hello World</code> will be converted to the JSON array:<pre>[72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100]</pre></p>",
        "modeString": "Handle as UTF-8 String",
        "title": "Buffer editor"
    },
    "clipboard": {
        "clipboard": "Clipboard",
        "configNode": "__count__ configuration node",
        "configNode_plural": "__count__ configuration nodes",
        "copyMessagePath": "Path copied",
        "copyMessageValue": "Value copied",
        "copyMessageValue_truncated": "Truncated value copied",
        "download": "Download",
        "export": {
            "all": "all flows",
            "compact": "compact",
            "copy": "Copy to clipboard",
            "current": "current flow",
            "exists": "<p><b>\"__file__\"</b> already exists.</p><p>Do you want to replace it?</p>",
            "export": "Export to library",
            "exportAs": "Export as",
            "formatted": "formatted",
            "overwrite": "Replace",
            "selected": "selected nodes"
        },
        "exportNodes": "Export nodes",
        "flow": "__count__ flow",
        "flow_plural": "__count__ flows",
        "group": "__count__ group",
        "groupCopied": "__count__ group copied",
        "groupCopied_plural": "__count__ groups copied",
        "groupStyleCopied": "Group style copied",
        "group_plural": "__count__ groups",
        "import": {
            "alreadyExists": "This node already exists",
            "conflictNotification1": "Some of the nodes you are importing already exist in your workspace.",
            "conflictNotification2": "Select which nodes to import and whether to replace the existing nodes, or to import a copy of them.",
            "errors": {
                "itemNotObject": "Input not a valid flow - item __index__ not a node object",
                "missingId": "Input not a valid flow - item __index__ missing 'id' property",
                "missingType": "Input not a valid flow - item __index__ missing 'type' property",
                "notArray": "Input not a JSON Array"
            },
            "import": "Import to",
            "importCopy": "Import copy",
            "importSelected": "Import selected",
            "newFlow": "new flow",
            "replace": "replace",
            "viewNodes": "View nodes..."
        },
        "importDuplicate": "Imported duplicate node:",
        "importDuplicate_plural": "Imported duplicate nodes:",
        "importNodes": "Import nodes",
        "importUnrecognised": "Imported unrecognised type:",
        "importUnrecognised_plural": "Imported unrecognised types:",
        "invalidFlow": "Invalid flow: __message__",
        "node": "__count__ node",
        "nodeCopied": "__count__ node copied",
        "nodeCopied_plural": "__count__ nodes copied",
        "node_plural": "__count__ nodes",
        "nodes": "Nodes",
        "nodesExported": "Nodes exported to clipboard",
        "nodesImported": "Imported:",
        "pasteNodes": "Paste flow json or",
        "recoveredNodes": "Recovered Nodes",
        "recoveredNodesInfo": "The nodes on this flow were missing a valid flow id when they were imported. They have been added to this flow so you can either restore or delete them.",
        "recoveredNodesNotification": "<p>Imported nodes without a valid flow id</p><p>They have been added to a new flow called '__flowName__'.</p>",
        "replacedNodes": "__count__ node replaced",
        "replacedNodes_plural": "__count__ nodes replaced",
        "selectFile": "select a file to import",
        "subflow": "__count__ subflow",
        "subflow_plural": "__count__ subflows"
    },
    "common": {
        "label": {
            "back": "Back",
            "cancel": "Cancel",
            "clone": "Clone project",
            "close": "Close",
            "color": "Color",
            "cont": "Continue",
            "delete": "Delete",
            "disable": "Disable",
            "done": "Done",
            "enable": "Enable",
            "export": "Export",
            "fill": "Fill",
            "format": "Format",
            "import": "Import",
            "label": "Label",
            "line": "Outline",
            "load": "Load",
            "lock": "Lock",
            "locked": "Locked",
            "name": "Name",
            "next": "Next",
            "ok": "Ok",
            "position": "Position",
            "save": "Save",
            "style": "Style",
            "unlock": "Unlock",
            "unlocked": "Unlocked",
            "upload": "Upload"
        },
        "type": {
            "array": "array",
            "boolean": "boolean",
            "buffer": "buffer",
            "jsonString": "JSON string",
            "null": "null",
            "number": "number",
            "object": "object",
            "string": "string",
            "undefined": "undefined"
        }
    },
    "contextMenu": {
        "insert": "Insert",
        "junction": "Junction",
        "linkNodes": "Link Nodes",
        "node": "Node",
        "showActionList": "Show action list"
    },
    "deploy": {
        "confirm": {
            "backgroundUpdate": "The flows on the server have been updated.",
            "button": {
                "cancel": "Cancel",
                "confirm": "Confirm deploy",
                "ignore": "Ignore",
                "merge": "Merge",
                "overwrite": "Ignore & deploy",
                "review": "Review changes"
            },
            "confirm": "Are you sure you want to deploy?",
            "conflict": "The server is running a more recent set of flows.",
            "conflictAutoMerge": "The changes include no conflicts and can be merged automatically.",
            "conflictChecking": "Checking to see if the changes can be merged automatically",
            "conflictManualMerge": "The changes include conflicts that must be resolved before they can be deployed.",
            "doNotWarn": "do not warn about this again",
            "improperlyConfigured": "The workspace contains some nodes that are not properly configured:",
            "plusNMore": "+ __count__ more",
            "undeployedChanges": "You have undeployed changes.\n\nLeaving this page will lose these changes.",
            "unknown": "The workspace contains some unknown node types:"
        },
        "deploy": "Deploy",
        "deployFailed": "Deploy failed: __message__",
        "errors": {
            "noResponse": "no response from server"
        },
        "full": "Full",
        "fullDesc": "Deploys everything in the workspace",
        "invalidNodesButton": "Search for invalid nodes",
        "modifiedFlows": "Modified Flows",
        "modifiedFlowsDesc": "Only deploys flows that contain changed nodes",
        "modifiedNodes": "Modified Nodes",
        "modifiedNodesDesc": "Only deploys nodes that have changed",
        "restartFlows": "Restart Flows",
        "restartFlowsDesc": "Restarts the current deployed flows",
        "startFlows": "Start",
        "startFlowsDesc": "Start Flows",
        "stopFlows": "Stop",
        "stopFlowsDesc": "Stop Flows",
        "successfulDeploy": "Successfully deployed",
        "successfulRestart": "Successfully restarted flows",
        "unknownNodesButton": "Search for unknown nodes",
        "unusedConfigNodes": "You have some unused configuration nodes.",
        "unusedConfigNodesButton": "Search unused config nodes"
    },
    "diagnostics": {
        "title": "System Info"
    },
    "diff": {
        "commonVersionError": "Common Version doesn't contain valid JSON:",
        "compareChanges": "Compare Changes",
        "conflictHeader": "<span>__resolved__</span> of <span>__unresolved__</span> conflicts resolved",
        "flowProperties": "Flow Properties",
        "globalNodes": "Global nodes",
        "local": "Local changes",
        "newVersionError": "New Version doesn't contain valid JSON:",
        "noBinaryFileShowed": "Cannot show binary file contents",
        "nodeCount": "__count__ node",
        "nodeCount_plural": "__count__ nodes",
        "oldVersionError": "Old Version doesn't contain valid JSON:",
        "remote": "Remote changes",
        "reviewChanges": "Review Changes",
        "saveConflict": "Save conflict resolution",
        "type": {
            "added": "added",
            "changed": "changed",
            "deleted": "deleted",
            "flowAdded": "flow added",
            "flowDeleted": "flow deleted",
            "moved": "moved",
            "movedFrom": "moved from __id__",
            "movedTo": "moved to __id__",
            "unchanged": "unchanged"
        },
        "unresolvedCount": "__count__ unresolved conflict",
        "unresolvedCount_plural": "__count__ unresolved conflicts",
        "viewCommitDiff": "View Commit Changes"
    },
    "editableList": {
        "add": "add",
        "addTitle": "add an item"
    },
    "editor": {
        "addNewConfig": "Add new __type__ config node",
        "addNewType": "Add new __type__...",
        "color": "Color",
        "configAdd": "Add",
        "configDelete": "Delete",
        "configEdit": "Edit",
        "configUpdate": "Update",
        "default": "default",
        "defaultLabel": "use default label",
        "description": "Description",
        "editConfig": "Edit __type__ config node",
        "editNode": "Edit __type__ node",
        "errors": {
            "credentialLoadFailed": "Failed to load node credentials",
            "invalidProperties": "Invalid properties:",
            "scopeChange": "Changing the scope will make it unavailable to nodes in other flows that use it"
        },
        "hide": "Hide",
        "icon": "Icon",
        "inputType": "Input type",
        "inputs": {
            "checkbox": "checkbox",
            "hidden": "hide property",
            "input": "input",
            "none": "none",
            "select": "select",
            "spinner": "spinner"
        },
        "label": "Label",
        "labelInputs": "Inputs",
        "labelOutputs": "Outputs",
        "loadCredentials": "Loading node credentials",
        "locale": "Select UI Language",
        "menu": {
            "checkbox": "checkbox",
            "hidden": "label only",
            "input": "input",
            "select": "select",
            "spinner": "spinner"
        },
        "noDefaultLabel": "none",
        "nodeProperties": "node properties",
        "nodesUse": "__count__ node uses this config",
        "nodesUse_plural": "__count__ nodes use this config",
        "portLabels": "Port labels",
        "searchIcons": "Search icons",
        "select": {
            "label": "Label",
            "value": "Value"
        },
        "selectType": "select types...",
        "settingIcon": "Icon",
        "show": "Show",
        "spinner": {
            "max": "Maximum",
            "min": "Minimum"
        },
        "types": {
            "bin": "buffer",
            "bool": "bool",
            "cred": "credential",
            "env": "env variable",
            "json": "JSON",
            "num": "number",
            "str": "string"
        },
        "useDefault": "use default"
    },
    "editor-tab": {
        "appearance": "Appearance",
        "defaultValue": "Default value",
        "description": "Description",
        "envProperties": "Environment Variables",
        "module": "Module Properties",
        "preview": "UI Preview",
        "properties": "Properties"
    },
    "env-var": {
        "environment": "Environment",
        "header": "Global Environment Variables",
        "revert": "Revert"
    },
    "event": {
        "importError": "<p>Error adding flows</p><p>__message__</p>",
        "importFlows": "Adding Flows to workspace",
        "loadFlows": "Loading Flows",
        "loadNodeCatalogs": "Loading Node catalogs",
        "loadNodes": "Loading Nodes __count__",
        "loadPalette": "Loading Palette",
        "loadPlugins": "Loading Plugins",
        "loadingProject": "Loading project"
    },
    "eventLog": {
        "title": "Event log",
        "view": "View log"
    },
    "expressionEditor": {
        "compatMode": "Compatibility mode enabled",
        "compatModeDesc": "<h3>JSONata compatibility mode</h3><p> The current expression appears to still reference <code>msg</code> so will be evaluated in compatibility mode. Please update the expression to not use <code>msg</code> as this mode will be removed in the future.</p><p> When JSONata support was first added to Node-RED, it required the expression to reference the <code>msg</code> object. For example <code>msg.payload</code> would be used to access the payload.</p><p> That is no longer necessary as the expression will be evaluated against the message directly. To access the payload, the expression should be just <code>payload</code>.</p>",
        "data": "Example message",
        "errors": {
            "clone-unsupported": "Cannot test $clone function",
            "context-unsupported": "Cannot test context functions\n $flowContext or $globalContext",
            "env-unsupported": "Cannot test $env function",
            "eval": "Error evaluating expression:\n  __message__",
            "invalid-expr": "Invalid JSONata expression:\n  __message__",
            "invalid-msg": "Invalid example JSON message:\n  __message__",
            "moment-unsupported": "Cannot test $moment function"
        },
        "format": "format expression",
        "functionReference": "Function reference",
        "functions": "Functions",
        "insert": "Insert",
        "noMatch": "No matching result",
        "result": "Result",
        "test": "Test",
        "title": "JSONata Expression editor"
    },
    "group": {
        "editGroup": "Edit group: __name__",
        "errors": {
            "cannotAddSubflowPorts": "Cannot add subflow ports to a group",
            "cannotCreateDiffGroups": "Cannot create group using nodes from different groups"
        }
    },
    "jsEditor": {
        "title": "JavaScript editor"
    },
    "jsonEditor": {
        "addItem": "Add item",
        "collapseItems": "Collapse items",
        "copyPath": "Copy path to item",
        "duplicate": "Duplicate",
        "error": {
            "invalidJSON": "Invalid JSON: "
        },
        "expandItems": "Expand items",
        "format": "format JSON",
        "insertAbove": "Insert above",
        "insertBelow": "Insert below",
        "rawMode": "Edit JSON",
        "rawMode-readonly": "JSON",
        "title": "JSON editor",
        "uiMode": "Visual editor",
        "uiMode-readonly": "Visual"
    },
    "keyboard": {
        "actionList": "Action list",
        "addRemoveNode": "Add/remove node from selection",
        "copyGroupStyle": "Copy group style",
        "copyNode": "Copy selected nodes",
        "cutNode": "Cut selected nodes",
        "deleteReconnect": "Delete and reconnect",
        "deleteSelected": "Delete selection",
        "editSelected": "Edit selected node",
        "editor": "edit dialog",
        "exportNode": "Export nodes",
        "filterActions": "filter actions",
        "global": "global",
        "importNode": "Import nodes",
        "keyboard": "Keyboard",
        "managePalette": "Manage palette",
        "moveNode": "Move selected nodes (20px)",
        "nudgeNode": "Move selected nodes (1px)",
        "pasteGroupStyle": "Paste group style",
        "pasteNode": "Paste nodes",
        "redoChange": "Redo",
        "scope": "scope",
        "searchBox": "Open search box",
        "selectAll": "Select all",
        "selectAllConnected": "Select connected",
        "selectNone": "Select none",
        "shortcut": "shortcut",
        "splitWireWithLinks": "Split selection with Link nodes",
        "title": "Keyboard Shortcuts",
        "togglePalette": "Toggle palette",
        "toggleSidebar": "Toggle sidebar",
        "unassigned": "Unassigned",
        "undoChange": "Undo",
        "workspace": "workspace"
    },
    "languages": {
        "de": "Deutsch",
        "en-US": "English",
        "es-ES": "Espa\u00f1ol (Espa\u00f1a)",
        "fr": "Fran\u00e7ais",
        "ja": "\u65e5\u672c\u8a9e",
        "ko": "Korean",
        "pt-BR": "Portugu\u00eas (Brasil)",
        "ru": "\u0420\u0443\u0441\u0441\u043a\u0438\u0439",
        "zh-CN": "\u7b80\u4f53\u4e2d\u6587",
        "zh-TW": "\u7e41\u9ad4\u4e2d\u6587"
    },
    "library": {
        "dialogSaveOverwrite": "A __libraryType__ called __libraryName__ already exists. Overwrite?",
        "exportedToLibrary": "Nodes exported to library",
        "invalidFilename": "Invalid filename",
        "library": "Library",
        "newFolder": "New folder",
        "openLibrary": "Open Library...",
        "saveFailed": "Save failed: __message__",
        "saveToLibrary": "Save to Library...",
        "savedNodes": "Saved nodes",
        "savedType": "Saved __type__",
        "typeLibrary": "__type__ library",
        "types": {
            "examples": "Examples",
            "local": "Local"
        },
        "unnamedType": "Unnamed __type__"
    },
    "markdownEditor": {
        "bold": "Bold",
        "code": "Code",
        "expand": "Expand",
        "format": "Formatted with markdown",
        "heading1": "Heading 1",
        "heading2": "Heading 2",
        "heading3": "Heading 3",
        "horizontal-rule": "Horizontal rule",
        "italic": "Italic",
        "link": "Link",
        "mermaid": {
            "summary": "Mermaid Diagram"
        },
        "ordered-list": "Ordered list",
        "quote": "Quote",
        "title": "Markdown editor",
        "toggle-preview": "Toggle preview",
        "unordered-list": "Unordered list"
    },
    "menu": {
        "label": {
            "add": "Add",
            "alignBottom": "Align to bottom",
            "alignCenter": "Align to center",
            "alignLeft": "Align to left",
            "alignMiddle": "Align to middle",
            "alignRight": "Align to right",
            "alignTop": "Align to top",
            "arrange": "Arrange",
            "codeEditor": "Code Editor",
            "createSubflow": "Create Subflow",
            "delete": "Delete",
            "disableSelectedNodes": "Disable selected nodes",
            "displayConfig": "Configuration nodes",
            "displayStatus": "Show node status",
            "distributeHorizontally": "Distribute horizontally",
            "distributeVertically": "Distribute vertically",
            "edit": "Edit",
            "editPalette": "Manage palette",
            "enableSelectedNodes": "Enable selected nodes",
            "export": "Export",
            "flows": "Flows",
            "groupMergeSelection": "Merge selection",
            "groupRemoveSelection": "Remove from group",
            "groupSelection": "Group selection",
            "groups": "Groups",
            "help": "Node-RED website",
            "hideSelectedNodeLabels": "Hide selected node labels",
            "import": "Import",
            "importExample": "Import example flow",
            "keyboardShortcuts": "Keyboard shortcuts",
            "login": "Login",
            "logout": "Logout",
            "moveBackwards": "Move backwards",
            "moveForwards": "Move forwards",
            "moveToBack": "Move to back",
            "moveToFront": "Move to front",
            "nodes": "Nodes",
            "other": "Other",
            "palette": {
                "show": "Show palette"
            },
            "projects": "Projects",
            "projects-new": "New",
            "projects-open": "Open",
            "projects-settings": "Project Settings",
            "search": "Search flows",
            "searchInput": "search your flows",
            "selectionToSubflow": "Selection to Subflow",
            "settings": "Settings",
            "showNodeHelp": "Show node help",
            "showNodeLabelDefault": "Show label of newly added nodes",
            "showSelectedNodeLabels": "Show selected node labels",
            "showTips": "Show tips",
            "showWelcomeTours": "Show guided tours for new versions",
            "sidebar": {
                "show": "Show sidebar"
            },
            "subflows": "Subflows",
            "ungroupSelection": "Ungroup selection",
            "userSettings": "User Settings",
            "view": {
                "auto": "Contextual",
                "browserDefault": "Browser default",
                "defaultDir": "Default",
                "grid": "Grid",
                "gridSize": "Grid size",
                "language": "Language",
                "ltr": "Left-to-right",
                "rtl": "Right-to-left",
                "showGrid": "Show grid",
                "snapGrid": "Snap to grid",
                "storePosition": "Restore scroll position on load",
                "storeZoom": "Restore zoom level on load",
                "textDir": "Text Direction",
                "view": "View"
            }
        }
    },
    "monaco": {
        "setTheme": "Set theme"
    },
    "notification": {
        "error": "<strong>Error</strong>: __message__",
        "errors": {
            "cannotAddCircularReference": "Cannot add subflow - circular reference detected",
            "cannotAddSubflowToItself": "Cannot add subflow to itself",
            "failedToAppendNode": "<p>Failed to load '__module__'</p><p>__error__</p>",
            "lostConnection": "Lost connection to server, reconnecting...",
            "lostConnectionReconnect": "Lost connection to server, reconnecting in __time__s.",
            "lostConnectionTry": "Try now",
            "unsupportedVersion": "<p>Using an unsupported version of Node.js</p><p>You should upgrade to the latest Node.js LTS release</p>"
        },
        "label": {
            "create-default-package": "Create default package file",
            "create-default-project": "Create default project files",
            "manage-project-dep": "Manage project dependencies",
            "no-thanks": "No thanks",
            "setup-cred": "Setup credentials",
            "setup-project": "Setup project files",
            "show-merge-conflicts": "Show merge conflicts",
            "unknownNodesButton": "Search for unknown nodes"
        },
        "project": {
            "change-branch": "Change to local branch '__project__'",
            "createDefault": "Create default project files",
            "loaded": "Project '__project__' loaded",
            "merge-abort": "Git merge aborted",
            "merge-complete": "Git merge completed",
            "mergeConflict": "Show merge conflicts",
            "no": "No thanks",
            "pull": "Project '__project__' reloaded",
            "revert": "Project '__project__' reverted",
            "setupCredentials": "Setup credentials",
            "setupProjectFiles": "Setup project files",
            "updated": "Project '__project__' updated"
        },
        "state": {
            "flowsStarted": "Flows started",
            "flowsStopped": "Flows stopped"
        },
        "warning": "<strong>Warning</strong>: __message__",
        "warnings": {
            "credentials_load_failed": "<p>Flows stopped as the credentials could not be decrypted.</p><p>The flow credential file is encrypted, but the project's encryption key is missing or invalid.</p>",
            "credentials_load_failed_reset": "<p>Credentials could not be decrypted</p><p>The flow credential file is encrypted, but the project's encryption key is missing or invalid.</p><p>The flow credential file will be reset on the next deployment. Any existing flow credentials will be cleared.</p>",
            "git_merge_conflict": "<p>Automatic merging of changes failed.</p><p>Fix the unmerged conflicts then commit the results.</p>",
            "missing-modules": "<p>Flows stopped due to missing modules.</p>",
            "missing-types": "<p>Flows stopped due to missing node types.</p>",
            "missing_flow_file": "<p>Project flow file not found.</p><p>The project is not configured with a flow file.</p>",
            "missing_package_file": "<p>Project package file not found.</p><p>The project is missing a package.json file.</p>",
            "nodeActionDisabled": "node actions disabled",
            "nodeActionDisabledSubflow": "node actions disabled within subflow",
            "project_empty": "<p>The project is empty.</p><p>Do you want to create a default set of project files?<br/>Otherwise, you will have to manually add files to the project outside of the editor.</p>",
            "project_not_found": "<p>Project '__project__' not found.</p>",
            "restartRequired": "Node-RED must be restarted to enable upgraded modules",
            "safe-mode": "<p>Flows stopped in safe mode.</p><p>You can modify your flows and deploy the changes to restart.</p>",
            "undeployedChanges": "node has undeployed changes"
        }
    },
    "palette": {
        "actions": {
            "collapse-all": "Collapse all categories",
            "expand-all": "Expand all categories"
        },
        "addCategory": "Add new...",
        "editor": {
            "allCatalogs": "All Catalogs",
            "confirm": {
                "button": {
                    "install": "Install",
                    "remove": "Remove",
                    "review": "Open node information",
                    "understood": "Understood",
                    "update": "Update"
                },
                "cannotUpdate": {
                    "body": "An update for this node is available, but it is not installed in a location that the palette manager can update.<br/><br/>Please refer to the documentation for how to update this node."
                },
                "install": {
                    "body": "<p>Installing '__module__'</p><p>Before installing, please read the node's documentation. Some nodes have dependencies that cannot be automatically resolved and can require a restart of Node-RED.</p>",
                    "title": "Install nodes"
                },
                "remove": {
                    "body": "<p>Removing '__module__'</p><p>Removing the node will uninstall it from Node-RED. The node may continue to use resources until Node-RED is restarted.</p>",
                    "title": "Remove nodes"
                },
                "removePlugin": {
                    "body": "<p>Removed plugin __module__. Please reload the editor to clear left-overs.</p>"
                },
                "update": {
                    "body": "<p>Updating '__module__'</p><p>Updating the node will require a restart of Node-RED to complete the update. This must be done manually.</p>",
                    "title": "Update nodes"
                }
            },
            "conflict": "conflict",
            "conflictTip": "<p>This module cannot be installed as it includes a<br/>node type that has already been installed</p><p>Conflicts with <code>__module__</code></p>",
            "disable": "disable",
            "disableall": "disable all",
            "enable": "enable",
            "enableall": "enable all",
            "errors": {
                "catalogLoadFailed": "<p>Failed to load node catalogue.</p><p>Check the browser console for more information</p>",
                "disableFailed": "<p>Failed to disable: __module__</p><p>__message__</p><p>Check the log for more information</p>",
                "enableFailed": "<p>Failed to enable: __module__</p><p>__message__</p><p>Check the log for more information</p>",
                "installFailed": "<p>Failed to install: __module__</p><p>__message__</p><p>Check the log for more information</p>",
                "installTimeout": "<p>Install continuing the background.</p><p>Nodes will appear in palette when complete. Check the log for more information.</p>",
                "removeFailed": "<p>Failed to remove: __module__</p><p>__message__</p><p>Check the log for more information</p>",
                "updateFailed": "<p>Failed to update: __module__</p><p>__message__</p><p>Check the log for more information</p>"
            },
            "install": "install",
            "installed": "installed",
            "inuse": "in use",
            "loading": "Loading catalogues...",
            "moduleCount": "__count__ module available",
            "moduleCount_plural": "__count__ modules available",
            "more": "+ __count__ more",
            "nodeCount": "__label__ node",
            "nodeCount_plural": "__label__ nodes",
            "palette": "Palette",
            "pluginCount": "__count__ plugin",
            "pluginCount_plural": "__count__ plugins",
            "refresh": "Refresh module list",
            "remove": "remove",
            "sort": "sort:",
            "sortAZ": "a-z",
            "sortRecent": "recent",
            "sortRelevance": "relevance",
            "tab-install": "Install",
            "tab-nodes": "Nodes",
            "times": {
                "daysV": "__count__ day ago",
                "daysV_plural": "__count__ days ago",
                "hoursV": "__count__ hour ago",
                "hoursV_plural": "__count__ hours ago",
                "minutes": "minutes ago",
                "minutesV": "__count__ minutes ago",
                "monthsV": "__count__ month ago",
                "monthsV_plural": "__count__ months ago",
                "seconds": "seconds ago",
                "weeksV": "__count__ week ago",
                "weeksV_plural": "__count__ weeks ago",
                "yearMonthsV": "__y__ year, __count__ month ago",
                "yearMonthsV_plural": "__y__ year, __count__ months ago",
                "yearsMonthsV": "__y__ years, __count__ month ago",
                "yearsMonthsV_plural": "__y__ years, __count__ months ago",
                "yearsV": "__count__ year ago",
                "yearsV_plural": "__count__ years ago"
            },
            "title": "Manage palette",
            "update": "update to __version__",
            "updated": "updated",
            "upload": "Upload module tgz file"
        },
        "event": {
            "nodeAdded": "Node added to palette:",
            "nodeAdded_plural": "Nodes added to palette:",
            "nodeDisabled": "Node disabled:",
            "nodeDisabled_plural": "Nodes disabled:",
            "nodeEnabled": "Node enabled:",
            "nodeEnabled_plural": "Nodes enabled:",
            "nodeRemoved": "Node removed from palette:",
            "nodeRemoved_plural": "Nodes removed from palette:",
            "nodeUpgraded": "Node module __module__ upgraded to version __version__",
            "unknownNodeRegistered": "Error loading node: <ul><li>__type__<br>__error__</li></ul>"
        },
        "filter": "filter nodes",
        "label": {
            "advanced": "advanced",
            "analysis": "analysis",
            "common": "common",
            "function": "function",
            "input": "input",
            "network": "network",
            "output": "output",
            "parser": "parser",
            "sequence": "sequence",
            "social": "social",
            "storage": "storage",
            "subflows": "subflows"
        },
        "noInfo": "no information available",
        "search": "search modules"
    },
    "projects": {
        "clone-project": {
            "already-exists": "Project already exists",
            "already-exists2": "already exists",
            "auth-failed": "Authentication failed",
            "cant-get-ssh-key": "Error! Can't get selected SSH key path.",
            "clone": "Clone a project",
            "connection-failed": "Connection failed",
            "credential-key": "Credentials encryption key",
            "desc0": "If you already have a git repository containing a project, you can clone it to get started.",
            "git-error": "git error",
            "git-url": "Git repository URL",
            "must-contain": "Must contain only A-Z 0-9 _ -",
            "no-info-in-url": "Do not include the username/password in the url",
            "not-git-repo": "Not a git repository",
            "passphrase": "Passphrase",
            "passwd": "Password",
            "project-name": "Project name",
            "protocols": "https://, ssh:// or file://",
            "repo-not-found": "Repository not found",
            "ssh-key": "SSH Key",
            "ssh-key-add": "Add an ssh key",
            "ssh-key-desc": "Before you can clone a repository over ssh you must add an SSH key to access it.",
            "username": "Username"
        },
        "config-git": "Configure Git client",
        "create": {
            "add-ssh-key": "Add an ssh key",
            "already-exists": "Project already exists",
            "already-exists-2": "already exists",
            "auth-failed": "Authentication failed",
            "cant-get-ssh-key-path": "Error! Can't get selected SSH key path.",
            "clearContext": "Clear context when switching projects",
            "clone": "Clone Repository",
            "con-failed": "Connection failed",
            "create": "Create Project",
            "credentials": "Credentials",
            "credentials-encryption-key": "Credentials encryption key",
            "desc": "Description",
            "desc0": "A phrase to secure your credentials with",
            "desc1": "The credentials file will not be encrypted and its contents easily read",
            "desc2": "Before you can clone a repository over ssh you must add an SSH key to access it.",
            "disable-encryption": "Disable encryption",
            "enable-encryption": "Enable encryption",
            "encryption-key": "Encryption key",
            "flow-file": "Flow file",
            "git-error": "git error",
            "git-url": "Git repository URL",
            "must-contain": "Must contain only A-Z 0-9 _ -",
            "no-info-in-url": "Do not include the username/password in the url",
            "no-resource": "Repository not found",
            "not-git": "Not a git repository",
            "open": "Open Project",
            "opt": "Optional",
            "passphrase": "Passphrase",
            "password": "Password",
            "project-name": "Project name",
            "projects": "Projects",
            "protocols": "https://, ssh:// or file://",
            "ssh-key": "SSH Key",
            "unexpected_error": "unexpected_error",
            "username": "Username"
        },
        "create-branch-list": {
            "create": "Create branch",
            "current": "current",
            "invalid": "Invalid branch"
        },
        "create-default-file-set": {
            "git-error": "git error",
            "no-active": "Cannot create default file set without an active project",
            "no-empty": "Cannot create default file set on a non-empty project"
        },
        "create-project-list": {
            "current": "current",
            "search": "search your projects"
        },
        "create-success": {
            "desc0": "You can now continue to use Node-RED just as you always have.",
            "desc1": "The 'info' tab in the sidebar shows you what your current active project is. The button next to the name can be used to access the project settings view.",
            "desc2": "The 'history' tab in the sidebar can be used to view files that have changed in your project and to commit them. It shows you a complete history of your commits and allows you to push your changes to a remote repository.",
            "success": "You have successfully created your first project!"
        },
        "default-files": {
            "create": "Create your project files",
            "credentials-file": "Credentials file",
            "desc0": "A project contains your flow files, a README file and a package.json file.",
            "desc1": "It can contain any other files you want to maintain in the Git repository.",
            "desc2": "Your existing flow and credential files will be copied into the project.",
            "flow-file": "Flow file"
        },
        "delete": {
            "confirm": "Are you sure you want to delete this project?"
        },
        "encryption-config": {
            "already-exists": "already exists",
            "copy": "Copy over existing key",
            "create-project": "Create project",
            "create-project-files": "Create project files",
            "credentials": "Credentials",
            "desc0": "Your flow credentials file can be encrypted to keep its contents secure.",
            "desc1": "If you want to store these credentials in a public Git repository, you must encrypt them by providing a secret key phrase.",
            "desc2": "Your flow credentials file is not currently encrypted.",
            "desc3": "That means its contents, such as passwords and access tokens, can be read by anyone with access to the file.",
            "desc4": "If you want to store these credentials in a public Git repository, you must encrypt them by providing a secret key phrase.",
            "desc5": "Your flow credentials file is currently encrypted using the credentialSecret property from your settings file as the key.",
            "desc6": "Your flow credentials file is currently encrypted using a system-generated key. You should provide a new secret key for this project.",
            "desc7": "The key will be stored separately from your project files. You will need to provide the key to use this project in another instance of Node-RED.",
            "desc8": "The credentials file will not be encrypted and its contents easily read",
            "disable": "Disable encryption",
            "disabled": "disabled",
            "enable": "Enable encryption",
            "git-auth-error": "git auth error",
            "git-error": "git error",
            "setup": "Setup encryption of your credentials file",
            "use-custom": "Use custom key"
        },
        "errors": {
            "code": "code",
            "no-username-email": "Your Git client is not configured with a username/email.",
            "unexpected": "An unexpected error occurred"
        },
        "git-config": {
            "desc0": "Node-RED uses the open source tool Git for version control. It tracks changes to your project files and lets you push them to remote repositories.",
            "desc1": "When you commit a set of changes, Git records who made the changes with a username and email address. The Username can be anything you want - it does not need to be your real name.",
            "desc2": "Your Git client is already configured with the details below.",
            "desc3": "You can change these settings later under the 'Git config' tab of the settings dialog.",
            "email": "Email",
            "setup": "Setup your version control client",
            "username": "Username"
        },
        "project-details": {
            "already-exists": "Project already exists",
            "create": "Create your project",
            "desc": "Description",
            "desc0": "A project is maintained as a Git repository. It makes it much easier to share your flows with others and to collaborate on them.",
            "desc1": "You can create multiple projects and quickly switch between them from the editor.",
            "desc2": "To begin, your project needs a name and an optional description.",
            "must-contain": "Must contain only A-Z 0-9 _ -",
            "opt": "Optional",
            "project-name": "Project name"
        },
        "require-clean": {
            "confirm": "<p>You have undeployed changes that will be lost.</p><p>Do you want to continue?</p>"
        },
        "send-req": {
            "auth-req": "Authentication required for repository",
            "host-key-verify-failed": "<p>Host key verification failed.</p><p>The repository host key could not be verified. Please update your <code>known_hosts</code> file and try again.</p>",
            "passphrase": "Passphrase",
            "password": "Password",
            "retry": "Retry",
            "unhandled": "Unhandled error response",
            "update-failed": "Failed to update auth",
            "username": "Username"
        },
        "welcome": {
            "clone": "Clone Repository",
            "create": "Create Project",
            "desc0": "This is a new way for you to manage your flow files and includes version control of your flows.",
            "desc1": "To get started you can create your first project or clone an existing project from a git repository.",
            "desc2": "If you are not sure, you can skip this for now. You will still be able to create your first project from the 'Projects' menu at any time.",
            "hello": "Hello! We have introduced 'projects' to Node-RED.",
            "not-right-now": "Not right now",
            "openExistingProject": "Open existing project"
        }
    },
    "search": {
        "addNode": "add a node...",
        "clear": "clear all",
        "empty": "No matches found",
        "history": "Search history",
        "options": {
            "configNodes": "Configuration nodes",
            "hiddenFlows": "Hidden flows",
            "invalidNodes": "Invalid nodes",
            "modifiedNodes": "Modified nodes and flows",
            "thisFlow": "Current flow",
            "uknownNodes": "Unknown nodes",
            "unusedConfigNodes": "Unused configuration nodes",
            "unusedSubflows": "Unused subflows"
        }
    },
    "sidebar": {
        "config": {
            "filterAll": "all",
            "filterUnused": "unused",
            "filtered": "__count__ hidden",
            "flows": "flows",
            "global": "On all flows",
            "label": "config",
            "name": "Configuration nodes",
            "none": "none",
            "showAllConfigNodes": "Show all config nodes",
            "showAllUnusedConfigNodes": "Show all unused config nodes",
            "subflows": "subflows"
        },
        "context": {
            "autoRefresh": "Refresh on selection change",
            "delete": "Delete",
            "deleteConfirm": "Are you sure you want to delete this item?",
            "empty": "empty",
            "flow": "Flow",
            "global": "Global",
            "label": "context",
            "name": "Context Data",
            "node": "Node",
            "none": "none selected",
            "refresh": "refresh to load",
            "refrsh": "Refresh"
        },
        "help": {
            "changeLog": "Change Log",
            "hideTopics": "Hide topics",
            "label": "help",
            "name": "Help",
            "noHelp": "No help topic selected",
            "nodeHelp": "Node Help",
            "search": "Search help",
            "showHelp": "Show help",
            "showInOutline": "Show in outline",
            "showTopics": "Show topics"
        },
        "info": {
            "arrayItems": "__count__ items",
            "blank": "blank",
            "copyItemUrl": "Copy item url",
            "copyURL2Clipboard": "Copied url to clipboard",
            "desc": "Description",
            "disabled": "Disabled",
            "empty": "empty",
            "enabled": "Enabled",
            "find": "Find in workspace",
            "flow": "Flow",
            "flowDesc": "Flow Description",
            "globalConfig": "Global Configuration Nodes",
            "group": "Group",
            "hideFlow": "Hide",
            "id": "ID",
            "info": "Information",
            "instances": "Instances",
            "label": "info",
            "module": "Module",
            "name": "Information",
            "node": "Node",
            "nodeHelp": "Node Help",
            "nodes": "__count__ nodes",
            "none": "None",
            "null": "null",
            "outline": "Outline",
            "properties": "Properties",
            "selection": "Selection",
            "showFlow": "Show",
            "showLess": "show less",
            "showMore": "show more",
            "showTips": "You can open the tips from the settings panel",
            "status": "Status",
            "subflow": "Subflow",
            "subflowDesc": "Subflow Description",
            "tabName": "Name",
            "triggerAction": "Trigger action",
            "type": "Type"
        },
        "palette": {
            "label": "palette",
            "name": "Palette management"
        },
        "project": {
            "dependencies": "Dependencies",
            "description": "Description",
            "editDependencies": "Edit project dependencies",
            "editDescription": "Edit project description",
            "editReadme": "Edit README.md",
            "label": "project",
            "name": "Project",
            "noDescriptionAvailable": "No description available",
            "noSummaryAvailable": "No summary available",
            "projectSettings": {
                "addRemote": "add remote",
                "addRemote2": "Add remote",
                "addToProject": "add to project",
                "branches": "Branches",
                "changeTheEncryptionKey": "Change the encryption key",
                "credentials": "Credentials",
                "credentialsAlert": "This will delete all existing credentials",
                "currentKey": "Current key",
                "deleteConfirm": "Are you sure you want to delete the local branch '__name__'? This cannot be undone.",
                "deleteRemote": "Delete remote",
                "deleteRemoteConfrim": "Are you sure you want to delete the remote '__name__'?",
                "deleteUnmergedBranch": "Delete unmerged branch",
                "edit": "edit",
                "encryptionDisabled": "Encryption disabled",
                "encryptionEnabled": "Encryption enabled",
                "fileNotExist": "File does not exist",
                "files": "Files",
                "flow": "Flow",
                "gitRemotes": "Git remotes",
                "install": "install",
                "invalidEncryptionKey": "Invalid encryption key",
                "nameRule": "Must contain only A-Z 0-9 _ -",
                "newKey": "New key",
                "noBranches": "No branches",
                "noRemotes": "No remotes",
                "none": "None",
                "package": "Package",
                "packageCreate": "File will be created when changes are saved",
                "remoteName": "Remote name",
                "removeFromProject": "remove from project",
                "resetTheEncryptionKey": "Reset the encryption key",
                "selectFile": "Select File",
                "setTheEncryptionKey": "Set the encryption key",
                "title": "Project Settings",
                "unmergedConfirm": "The local branch '__name__' has unmerged changes that will be lost. Are you sure you want to delete it?",
                "url": "URL",
                "urlRule": "https://, ssh:// or file://",
                "urlRule2": "Do not include the username/password in the URL",
                "versionControl": "Version Control"
            },
            "settings": "Settings",
            "showProjectSettings": "Show project settings",
            "userSettings": {
                "add": "add key",
                "addSshKey": "Add SSH Key",
                "addSshKeyTip": "Generate a new public/private key pair",
                "cancel": "Cancel",
                "committerDetail": "Committer Details",
                "committerTip": "Leave blank to use system default",
                "copyPublicKey": "Copy public key to clipboard",
                "delete": "Delete key",
                "deleteConfirm": "Are you sure you want to delete the SSH key __name__? This cannot be undone.",
                "email": "Email",
                "generate": "Generate key",
                "gitConfig": "Git config",
                "name": "Name",
                "nameRule": "Must contain only A-Z 0-9 _ -",
                "noSshKeys": "No SSH keys",
                "optional": "Optional",
                "passphrase": "Passphrase",
                "passphraseShort": "Passphrase too short",
                "sshKeys": "SSH Keys",
                "sshKeysTip": "Allows you to create secure connections to remote git repositories.",
                "userName": "Username",
                "workflow": "Workflow",
                "workflowAuto": "Automatic",
                "workflowAutoTip": "Changes are committed automatically with every deploy",
                "workflowManual": "Manual",
                "workflowManualTip": "All changes must be manually committed under the 'history' sidebar",
                "workfowTip": "Choose your preferred git workflow"
            },
            "versionControl": {
                "abortMerge": "abort merge",
                "all": "all",
                "branch": "Branch:",
                "cancelCapital": "Cancel",
                "changeLocalBranch": "Change local branch",
                "changeToCommit": "Changes to commit",
                "commit": "commit",
                "commitCapital": "Commit",
                "commitChanges": "Commit changes",
                "commitHistory": "Commit History",
                "commitPlaceholder": "Enter your commit message",
                "commitsAhead": "Your repository is __count__ commit ahead of the remote. You can push this commit now.",
                "commitsAheadAndBehind1": "Your repository is __count__ commit behind and ",
                "commitsAheadAndBehind1_plural": "Your repository is __count__ commits behind and ",
                "commitsAheadAndBehind2": "__count__ commit ahead of the remote. ",
                "commitsAheadAndBehind2_plural": "__count__ commits ahead of the remote. ",
                "commitsAheadAndBehind3": "You must pull the remote commit down before pushing.",
                "commitsAheadAndBehind3_plural": "You must pull the remote commits down before pushing.",
                "commitsAhead_plural": "Your repository is __count__ commits ahead of the remote. You can push these commits now.",
                "commitsBehind": "Your repository is __count__ commit behind of the remote. You can pull this commit now.",
                "commitsBehind_plural": "Your repository is __count__ commits behind of the remote. You can pull these commits now.",
                "conflictResolve": "All conflicts resolved. Commit the changes to complete the merge.",
                "connectionFailed": "Could not connect to remote repository: ",
                "createBranchPlaceholder": "Find or create a branch",
                "createRemoteBranchPlaceholder": "Find or create a remote branch",
                "daysAgo": "__count__ day ago",
                "daysAgo_plural": "__count__ days ago",
                "head": "HEAD",
                "history": "history",
                "hoursAgo": "__count__ hour ago",
                "hoursAgo_plural": "__count__ hours ago",
                "local": "Local",
                "localChanges": "Local Changes",
                "localFiles": "Local files",
                "localOverwrite": "You have local changes that would be overwritten by changing the branch. You must either commit or undo those changes first.",
                "manageRemoteBranch": "Manage remote branch",
                "minsAgo": "__count__ min ago",
                "minsAgo_plural": "__count__ mins ago",
                "moreCommits": " more commit(s)",
                "none": "None",
                "notTracking": "Your local branch is not currently tracking a remote branch.",
                "projectHistory": "Project History",
                "pull": "pull",
                "pullChanges": "Pull changes",
                "pullUnrelatedHistory": "<p>The remote has an unrelated history of commits.</p><p>Are you sure you want to pull the changes into your local repository?</p>",
                "push": "push",
                "pushFailed": "Push failed as the remote has more recent commits. Pull and merge first, then push again.",
                "refreshChanges": "Refresh changes",
                "refreshCommitHistory": "Refresh commit history",
                "remote": "Remote",
                "repositoryUpToDate": "Your repository is up to date.",
                "resolveConflicts": "Resolve conflicts",
                "retry": "Retry",
                "revert": "Are you sure you want to revert the changes to '__file__'? This cannot be undone.",
                "revertChanges": "Revert changes",
                "secondsAgo": "Seconds ago",
                "selectUpstreamBranch": "The branch will be created. Select below to set it as the tracked upstream branch.",
                "setUpstreamBranch": "Set as upstream branch",
                "showUnstagedChanges": "Show unstaged changes",
                "stageAllChange": "Stage all changes",
                "stageChange": "Stage change",
                "staged": "Staged",
                "stagedChanges": "Staged changes",
                "statusUnmergedChanged": "Your repository has unmerged changes. You need to fix the conflicts and commit the result.",
                "trackedUpstreamBranch": "The created branch will be set as the tracked upstream branch.",
                "unablePull": "<p>Unable to pull remote changes; your unstaged local changes would be overwritten.</p><p>Commit your changes and try again.</p>",
                "unableToAccess": "Unable to access remote repository",
                "unmergedChanges": "Unmerged changes",
                "unstageAllChange": "Unstage all changes",
                "unstageChange": "Unstage change",
                "unstaged": "Unstaged",
                "unstagedChanges": "Unstaged changes",
                "upstream": "upstream"
            }
        }
    },
    "subflow": {
        "author": "Author",
        "authorPlaceholder": "Your Name <email@example.com>",
        "category": "Category",
        "confirmDelete": "Are you sure you want to delete this subflow?",
        "deleteSubflow": "delete subflow",
        "desc": "Description",
        "edit": "Edit subflow template",
        "editSubflow": "Edit subflow template: __name__",
        "editSubflowInstance": "Edit subflow instance: __name__",
        "editSubflowProperties": "edit properties",
        "env": {
            "remove": "Remove environment variable",
            "restore": "Restore to subflow default"
        },
        "errors": {
            "acrossMultipleGroups": "Cannot create subflow across multiple groups",
            "multipleInputsToSelection": "<strong>Cannot create subflow</strong>: multiple inputs to selection",
            "noNodesSelected": "<strong>Cannot create subflow</strong>: no nodes selected"
        },
        "info": "Description",
        "input": "inputs:",
        "keys": "Keywords",
        "keysPlaceholder": "Comma-separated keywords",
        "license": "License",
        "licenseNone": "none",
        "licenseOther": "Other",
        "module": "Module",
        "output": "outputs:",
        "status": "status node",
        "subflowInstances": "There is __count__ instance of this subflow template",
        "subflowInstances_plural": "There are __count__ instances of this subflow template",
        "type": "Node Type",
        "version": "Version",
        "versionPlaceholder": "x.y.z"
    },
    "textEditor": {
        "title": "Text editor"
    },
    "tourGuide": {
        "next": "Next",
        "start": "Start",
        "takeATour": "Take a tour",
        "welcomeTours": "Welcome Tours"
    },
    "typedInput": {
        "date": {
            "format": {
                "object": "JavaScript Date Object",
                "timestamp": "milliseconds since epoch"
            }
        },
        "selected": "__count__ selected",
        "selected_plural": "__count__ selected",
        "type": {
            "bin": "buffer",
            "bool": "boolean",
            "conf-types": "config node",
            "cred": "credential",
            "date": "timestamp",
            "env": "env variable",
            "json": "JSON",
            "jsonata": "expression",
            "num": "number",
            "re": "regular expression",
            "str": "string"
        }
    },
    "user": {
        "errors": {
            "deploy": "You must be logged in to deploy changes",
            "notAuthorized": "You must be logged in to perform this action",
            "settings": "You must be logged in to access settings"
        },
        "loggedInAs": "Logged in as __name__",
        "login": "Login",
        "loginFailed": "Login failed",
        "notAuthorized": "Not authorized",
        "password": "Password",
        "username": "Username"
    },
    "validator": {
        "errors": {
            "invalid-config": "__prop__: invalid configuration node",
            "invalid-expr": "Invalid JSONata expression: __error__",
            "invalid-json": "Invalid JSON data: __error__",
            "invalid-num": "Invalid number",
            "invalid-num-prop": "__prop__: invalid number",
            "invalid-prop": "Invalid property expression",
            "invalid-regex-prop": "__prop__: invalid input pattern",
            "invalid-regexp": "Invalid input pattern",
            "missing-config": "__prop__: missing configuration node",
            "missing-required-prop": "__prop__: property value missing",
            "validation-error": "__prop__: validation error: __node__, __id__: __error__"
        }
    },
    "workspace": {
        "addFlow": "Add flow",
        "addFlowToRight": "Add flow to the right",
        "closeFlow": "Close flow",
        "confirmDelete": "Confirm delete",
        "defaultName": "Flow __number__",
        "delete": "Are you sure you want to delete '__label__'?",
        "disableFlow": "Disable flow",
        "disabled": "Disabled",
        "dropFlowHere": "Drop the flow here",
        "dropImageHere": "Drop the image here",
        "editFlow": "Edit flow: __name__",
        "enableFlow": "Enable flow",
        "enabled": "Enabled",
        "hiddenFlows": "List __count__ hidden flow",
        "hiddenFlows_plural": "List __count__ hidden flows",
        "hideAllFlows": "Hide all flows",
        "hideFlow": "Hide flow",
        "hideOtherFlows": "Hide other flows",
        "info": "Description",
        "listFlows": "List flows",
        "listSubflows": "List subflows",
        "lockFlow": "Lock flow",
        "moveToEnd": "Move flow to end",
        "moveToStart": "Move flow to start",
        "selectNodes": "Click nodes to select",
        "showAllFlows": "Show all flows (__count__ hidden)",
        "showLastHiddenFlow": "Reopen hidden flow",
        "status": "Status",
        "unlockFlow": "Unlock flow"
    }
}
