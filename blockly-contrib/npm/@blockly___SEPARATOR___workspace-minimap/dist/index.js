/*! For license information please see index.js.LICENSE.txt */
!function(i,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("blockly/core"));else if("function"==typeof define&&define.amd)define(["blockly/core"],t);else{var e="object"==typeof exports?t(require("blockly/core")):t(i.Blockly);for(var s in e)("object"==typeof exports?exports:i)[s]=e[s]}}(this,(i=>(()=>{"use strict";var t={573:t=>{t.exports=i}},e={};function s(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,s),r.exports}s.d=(i,t)=>{for(var e in t)s.o(t,e)&&!s.o(i,e)&&Object.defineProperty(i,e,{enumerable:!0,get:t[e]})},s.o=(i,t)=>Object.prototype.hasOwnProperty.call(i,t),s.r=i=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})};var o={};return(()=>{s.r(o),s.d(o,{Minimap:()=>n,PositionedMinimap:()=>a});var i=s(573);const t=new Set([i.Events.VIEWPORT_CHANGE,i.Events.BLOCK_CHANGE,i.Events.BLOCK_CREATE,i.Events.BLOCK_DELETE,i.Events.BLOCK_DRAG,i.Events.BLOCK_MOVE]);class e{constructor(i,t){this.primaryWorkspace=i,this.minimapWorkspace=t,this.svgGroup=null,this.rect=null,this.background=null,this.initialized=!1,this.id=String(Math.random()).substring(2),this.onChangeWrapper=this.onChange.bind(this)}init(){this.svgGroup=i.utils.dom.createSvgElement(i.utils.Svg.G,{class:"blockly-focus-region"},null);const t=i.utils.dom.createSvgElement(new i.utils.Svg("mask"),{id:"focusRegionMask"+this.id},this.svgGroup);this.background=i.utils.dom.createSvgElement(i.utils.Svg.RECT,{x:0,y:0,width:"100%",height:"100%",mask:"url(#focusRegionMask"+this.id+")"},this.svgGroup),i.utils.dom.createSvgElement(i.utils.Svg.RECT,{x:0,y:0,width:"100%",height:"100%",fill:"white"},t),this.rect=i.utils.dom.createSvgElement(i.utils.Svg.RECT,{x:0,y:0,rx:6,ry:6,fill:"black"},t);const e=this.minimapWorkspace.getParentSvg();e.firstChild?e.insertBefore(this.svgGroup,e.firstChild):e.appendChild(this.svgGroup),window.addEventListener("resize",(()=>{this.update()})),window.addEventListener("load",(()=>{this.update()})),this.onChangeWrapper=this.onChange.bind(this),this.primaryWorkspace.addChangeListener(this.onChangeWrapper),this.update(),this.initialized=!0}dispose(){this.onChangeWrapper&&(this.primaryWorkspace.removeChangeListener(this.onChangeWrapper),this.onChangeWrapper=()=>null),this.svgGroup&&i.utils.dom.removeNode(this.svgGroup),this.svgGroup=null,this.rect=null,this.background=null,this.initialized=!1}onChange(i){t.has(i.type)&&this.update()}update(){const i=this.primaryWorkspace.getMetricsManager(),t=this.minimapWorkspace.getMetricsManager(),e=i.getViewMetrics(!0),s=i.getContentMetrics(!0),o=t.getContentMetrics(),r=t.getSvgMetrics();if(0===s.width)return;const n=o.width/t.getContentMetrics(!0).width,a=e.width*n,p=e.height*n;let h=(e.left-s.left)*n,l=(e.top-s.top)*n;if(h+=(r.width-o.width)/2,l+=(r.height-o.height)/2,!this.rect)throw new Error("The focus region must be initialized (`init`) before calling `update`");this.rect.setAttribute("transform",`translate(${h},${l})`),this.rect.setAttribute("width",a.toString()),this.rect.setAttribute("height",p.toString())}isEnabled(){return this.initialized}}i.Css.register("\n.blockly-focus-region {\n  fill: #e6e6e6;\n}\n");const r=new Set([i.Events.BLOCK_CHANGE,i.Events.BLOCK_CREATE,i.Events.BLOCK_DELETE,i.Events.BLOCK_DRAG,i.Events.BLOCK_MOVE]);class n{constructor(i){this.minimapWorkspace=null,this.focusRegion=null,this.onMouseMoveWrapper=null,this.onMouseDownWrapper=null,this.onMouseUpWrapper=null,this.minimapWrapper=null,this.primaryWorkspace=i}init(){var t;const s=this.primaryWorkspace.getInjectionDiv().parentNode;if(!s)throw new Error("The workspace must be injected into the page before the minimap can be initalized");this.minimapWrapper=document.createElement("div"),this.minimapWrapper.id="minimapWrapper"+this.primaryWorkspace.id,this.minimapWrapper.className="blockly-minimap",null==s||s.appendChild(this.minimapWrapper),this.minimapWorkspace=i.inject(this.minimapWrapper.id,{rtl:this.primaryWorkspace.RTL,move:{scrollbars:!0,drag:!1,wheel:!1},zoom:{maxScale:1/0,minScale:0},readOnly:!0,theme:this.primaryWorkspace.getTheme(),renderer:this.primaryWorkspace.options.renderer}),null===(t=this.minimapWorkspace.scrollbar)||void 0===t||t.setContainerVisible(!1),this.primaryWorkspace.addChangeListener((i=>{this.mirror(i)})),window.addEventListener("resize",(()=>{this.minimapWorkspace&&this.minimapWorkspace.zoomToFit()}));const o=i=>this.onClickDown(i);this.minimapWorkspace.svgGroup_.addEventListener("pointerdown",o,!0),this.onMouseDownWrapper=[[this.minimapWorkspace.svgGroup_,"pointerdown",o]],this.onMouseUpWrapper=i.browserEvents.bind(s,"mouseup",this,this.onClickUp),this.focusRegion=new e(this.primaryWorkspace,this.minimapWorkspace),this.enableFocusRegion()}dispose(){this.isFocusEnabled()&&this.disableFocusRegion(),this.minimapWorkspace&&this.minimapWorkspace.dispose(),i.utils.dom.removeNode(this.minimapWrapper),this.onMouseMoveWrapper&&i.browserEvents.unbind(this.onMouseMoveWrapper),this.onMouseDownWrapper&&i.browserEvents.unbind(this.onMouseDownWrapper),this.onMouseUpWrapper&&i.browserEvents.unbind(this.onMouseUpWrapper)}mirror(t){if(!r.has(t.type))return;if(t.type===i.Events.BLOCK_CREATE&&"shadow"===t.xml.tagName)return;const e=t.toJson();this.minimapWorkspace&&i.Events.fromJson(e,this.minimapWorkspace).run(!0),i.renderManagement.finishQueuedRenders().then((()=>{this.minimapWorkspace&&this.minimapWorkspace.zoomToFit()}))}static minimapToPrimaryCoords(i,t,e,s){e-=(t.svgWidth-t.contentWidth)/2,s-=(t.svgHeight-t.contentHeight)/2;const o=i.contentWidth/t.contentWidth;e*=o,s*=o;let r=-i.contentLeft-e,n=-i.contentTop-s;return r+=i.viewWidth/2,n+=i.viewHeight/2,[r,n]}primaryScroll(i){const t=this.primaryWorkspace.getMetrics();if(this.minimapWorkspace){const e=this.minimapWorkspace.getMetrics();if(t&&e){const[s,o]=n.minimapToPrimaryCoords(t,e,i.offsetX,i.offsetY);this.primaryWorkspace.scroll(s,o)}}}onClickDown(t){this.minimapWorkspace&&(t.stopImmediatePropagation(),this.onMouseMoveWrapper=i.browserEvents.bind(this.minimapWorkspace.svgGroup_,"mousemove",this,this.onMouseMove),this.primaryScroll(t))}onClickUp(){this.onMouseMoveWrapper&&(i.browserEvents.unbind(this.onMouseMoveWrapper),this.onMouseMoveWrapper=null)}onMouseMove(i){this.primaryScroll(i)}enableFocusRegion(){this.focusRegion&&this.focusRegion.init()}disableFocusRegion(){this.focusRegion&&this.focusRegion.dispose()}isFocusEnabled(){return!!this.focusRegion&&this.focusRegion.isEnabled()}}class a extends n{constructor(i){super(i),this.id="minimap",this.margin=20,this.top=0,this.left=0,this.width=225,this.height=150}init(){super.init(),this.primaryWorkspace.getComponentManager().addComponent({component:this,weight:3,capabilities:[i.ComponentManager.Capability.POSITIONABLE]}),this.primaryWorkspace.resize()}getBoundingRectangle(){return new i.utils.Rect(this.top,this.top+this.height,this.left,this.left+this.width)}position(i,t){this.setSize(),this.setPosition(i,t),this.setAttributes()}setSize(){const i=this.primaryWorkspace.getMetrics().viewWidth;this.width=Math.max(200,i/5),this.height=2*this.width/3}setPosition(t,e){const s=this.primaryWorkspace,o=s.scrollbar,r=o&&o.isVisible()&&o.canScrollVertically(),n=o&&o.isVisible()&&o.canScrollHorizontally();t.toolboxMetrics.position===i.TOOLBOX_AT_LEFT||s.horizontalLayout&&!s.RTL?(this.left=t.absoluteMetrics.left+t.viewMetrics.width-this.width-this.margin,r&&!s.RTL&&(this.left-=i.Scrollbar.scrollbarThickness)):(this.left=this.margin,r&&s.RTL&&(this.left+=i.Scrollbar.scrollbarThickness));const a=t.toolboxMetrics.position===i.TOOLBOX_AT_BOTTOM;a?(this.top=t.absoluteMetrics.top+t.viewMetrics.height-this.height-this.margin,n&&(this.top-=i.Scrollbar.scrollbarThickness)):this.top=t.absoluteMetrics.top+this.margin;let p=this.getBoundingRectangle();for(let i=0;i<e.length;i++)p.intersects(e[i])&&(this.top=a?e[i].top-this.height-this.margin:e[i].bottom+this.margin,p=this.getBoundingRectangle(),i=-1)}setAttributes(){var t;const e=null===(t=this.minimapWorkspace)||void 0===t?void 0:t.getInjectionDiv();if(!e)return;if(null===(null==e?void 0:e.parentElement))return;const s=e.parentElement.style;s.zIndex="2",s.position="absolute",s.width=`${this.width}px`,s.height=`${this.height}px`,s.top=`${this.top}px`,s.left=`${this.left}px`,this.minimapWorkspace&&i.svgResize(this.minimapWorkspace)}}i.Css.register("\n.blockly-minimap {\n  box-shadow: 2px 2px 10px grey;\n}\n")})(),o})()));
//# sourceMappingURL=index.js.map